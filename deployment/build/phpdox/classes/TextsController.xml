<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="TextsController" namespace="" name="TextsController" abstract="false" final="false" start="8" end="202">
  <file path="app/Controller" file="TextsController.php" realpath="/home/vagrant/socsoc/app/Controller/TextsController.php" size="5434" time="2014-04-09T08:38:48+00:00" unixtime="1397032728" sha1="50811ac80d1f9dfc29212a9065fd1096ba25d410"/>
  <docblock>
    <description compact="Texts Controller"/>
    <property value="Text $Text"/>
  </docblock>
  <extends full="AppController" namespace="" name="AppController"/>
  <method name="beforeFilter" start="10" end="14" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="allow all users the function 'getorset' for getting/setting helptexts on" line="11"/>
      <comment value="specific HTML elements" line="12"/>
    </inline>
  </method>
  <method name="index" start="21" end="30" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="index method"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <inline>
      <comment value="the number of records we want on one page" line="24"/>
    </inline>
  </method>
  <method name="view" start="39" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="view method"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="edit" start="71" end="88" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="edit method"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="delete" start="98" end="110" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="delete method"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <throws type="object">
        <type full="MethodNotAllowedException" namespace="" name="MethodNotAllowedException"/>
      </throws>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="ajaxdelete" start="120" end="136" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Ajax delete method"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <throws type="object">
        <type full="MethodNotAllowedException" namespace="" name="MethodNotAllowedException"/>
      </throws>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="an error occured" line="134"/>
    </inline>
  </method>
  <method name="getorset" start="146" end="171" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="From the supplied key, get the according text. If no record exists for the supplied key, create a new one with an empty text"/>
      <param type="string" variable="$key"/>
      <return description="Returns the helptext, or empty string when a new empty record is created" type="string"/>
    </docblock>
    <parameter name="key" byreference="false" type="string" default="&quot;&quot;"/>
    <inline>
      <comment value="search the text by key" line="150"/>
      <comment value="we got a text, so return it" line="152"/>
      <comment value="there is no helptext, so create a new (empty)" line="156"/>
      <comment value="helptext record for the supplied key" line="157"/>
      <comment value="return empty string" line="169"/>
    </inline>
  </method>
  <method name="isAuthorized" start="181" end="201" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set authorization for actions concerning the user with the role 'beheerder'"/>
      <param description="Array holding $user['id']" type="array" variable="$user"/>
      <return description="True when the user has the role 'beheerder', otherwise false" type="boolean"/>
    </docblock>
    <parameter name="user" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="don't allow anonymous users" line="183"/>
      <comment value="setup the allowed actions for loggedin users" line="189"/>
      <comment value="actions allowed for loggedin users only" line="194"/>
      <comment value="execute parent functin" line="199"/>
    </inline>
  </method>
  <parent full="AppController" namepsace="" name="AppController">
    <extends full="Controller" namespace="" name="Controller"/>
    <member name="components" type="array" visibility="public" line="36"/>
    <member name="uses" type="array" visibility="public" line="56">
      <docblock>
        <description compact=""/>
      </docblock>
    </member>
    <method name="getSearchFormInfo" start="58" end="85" abstract="false" final="false" static="false" visibility="public">
      <inline>
        <comment value="get the information to build the searchform" line="59"/>
      </inline>
    </method>
    <method name="beforeRender" start="91" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This function is called before every view is displayed"/>
      </docblock>
      <inline>
        <comment value="cookies need to be accepted" line="100"/>
        <comment value="get the information needed to setup the search form on every page" line="107"/>
        <comment value="let the views know whether the user is logged in or not" line="110"/>
        <comment value="check the supported browser versions if we did not do so" line="113"/>
        <comment value="get the number of online users" line="116"/>
        <comment value="get all the rubrics so we can create hidden selectelements which can be used" line="121"/>
        <comment value="for searching and adding" line="122"/>
      </inline>
    </method>
    <method name="isBrowserOutOfDate" start="169" end="177" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact=""/>
        <param type="array" variable="$browser"/>
        <return type="object">
          <type full="bool" namespace="" name="bool"/>
        </return>
      </docblock>
      <parameter name="browser" byreference="false" type="array"/>
      <inline>
        <comment value="we didn't recognize the browser" line="174"/>
      </inline>
    </method>
    <method name="beforeFilter" start="183" end="193" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This function is called before every action is run"/>
      </docblock>
      <inline>
        <comment value="update the last online value for the currently logged in user (if any)" line="186"/>
        <comment value="set the max upload limit" line="189"/>
      </inline>
    </method>
    <method name="isAuthorized" start="235" end="259" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set global authorization for the application">Per-action authorization is set in the overwritten function 'isAuthorized($user)'
in the controller of a requested action.
This global function sets authorization on all actions of all controllers for users
with the role 'beheerder'</description>
        <param description="Array holding $user['id']" type="array" variable="$user"/>
        <return description="True when the user has the role 'beheerder', otherwise false" type="boolean"/>
      </docblock>
      <parameter name="user" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="admin users are allowed to do everything" line="236"/>
        <comment value="admin functions are for admins only" line="241"/>
        <comment value="setup the allowed actions for loggedin users" line="247"/>
        <comment value="actions allowed for loggedin users only" line="252"/>
        <comment value="default deny access" line="257"/>
      </inline>
    </method>
    <method name="updateAuthUserInfo" start="266" end="288" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Update the information hold in the Auth component. Useful when the users' information changes (when editing user information, for example)."/>
      </docblock>
      <inline>
        <comment value="Read in the current user information out of the database" line="267"/>
        <comment value="remove the password field" line="272"/>
        <comment value="merge the auth component data with our freshly fetched info" line="277"/>
        <comment value="write the user information to the Auth component" line="283"/>
      </inline>
    </method>
    <method name="ago" start="296" end="365" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact=""/>
        <param description="The time we want to break down into human readable time" type="object" variable="$time">
          <type full="unknown" namespace="" name="unknown"/>
        </param>
        <param type="object" variable="$rcs">
          <type full="int|number" namespace="" name="int|number"/>
        </param>
        <return type="string"/>
      </docblock>
      <parameter name="time" byreference="false" type="{unknown}"/>
      <parameter name="rcs" byreference="false" type="integer" default="0"/>
      <inline>
        <comment value="periods of time we have (singular)" line="300"/>
        <comment value="periods of time we have (plural)" line="312"/>
        <comment value="the length of each period of time in seconds" line="324"/>
        <comment value="loop through the supplied time" line="337"/>
        <comment value="ugly hack to prevent $countLength from getting -1" line="344"/>
        <comment value="write down the singular form of past time" line="349"/>
        <comment value="when working with plurals, change the name of the period to its plural form" line="352"/>
      </inline>
    </method>
    <method name="daysBetween" start="372" end="376" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact=""/>
        <param variable="$fromTime"/>
        <return type="float"/>
      </docblock>
      <parameter name="fromTime" byreference="false" type="{unknown}"/>
    </method>
    <method name="getBrowser" start="381" end="485" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Browser check"/>
      </docblock>
      <inline>
        <comment value="First get the platform?" line="390"/>
        <comment value="Next get the name of the useragent yes seperately and for good reason" line="401"/>
        <comment value="finally get the correct version number" line="446"/>
        <comment value="see how many we have" line="454"/>
        <comment value="we will have two since we are not using 'other' argument yet" line="457"/>
        <comment value="see if version is before or after the name" line="458"/>
        <comment value="check if we have a number" line="470"/>
      </inline>
    </method>
  </parent>
</class>
