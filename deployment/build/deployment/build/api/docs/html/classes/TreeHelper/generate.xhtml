<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head xmlns:git="http://xml.phpdox.net/gitlog#">
    <title>phpDox - Test Method</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav xmlns:git="http://xml.phpdox.net/gitlog#" class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../../reports/index.xhtml">Reports</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#"/>
          </li>
          <li class="separator">
            <a title="TreeHelper" href="../../classes/TreeHelper.xhtml">TreeHelper</a>
          </li>
          <li class="separator">generate</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#return">Return</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>TreeHelper::</small>generate</h1>
        <h4>Tree generation method.</h4>
        <p>Accepts the results of
	find('all', array('fields' =&gt; array('lft', 'rght', 'whatever'), 'order' =&gt; 'lft ASC'));
	children(); // if you have the tree behavior of course!
or 	findAllThreaded(); and generates a tree structure of the data.

Settings (2nd parameter):
'model' =&gt; name of the model (key) to look for in the data array. defaults to the first model for the current
controller. If set to false 2d arrays will be allowed/expected.
'alias' =&gt; the array key to output for a simple ul (not used if element or callback is specified)
'type' =&gt; type of output defaults to ul
'itemType =&gt; type of item output default to li
'id' =&gt; id for top level 'type'
'class' =&gt; class for top level 'type'
'element' =&gt; path to an element to render to get node contents.
'callback' =&gt; callback to use to get node contents. e.g. array(&amp;$anObject, 'methodName') or 'floatingMethod'
'autoPath' =&gt; array($left, $right [$classToAdd = 'active']) if set any item in the path will have the class $classToAdd added. MPTT only.
'left' =&gt; name of the 'lft' field if not lft. only applies to MPTT data
'right' =&gt; name of the 'rght' field if not lft. only applies to MPTT data
'depth' =&gt; used internally when running recursively, can be used to override the depth in either mode.
'firstChild' =&gt; used internally when running recursively.
'splitDepth' =&gt; if multiple "parallel" types are required, instead of one big type, nominate the depth to do so here
	example: useful if you have 30 items to display, and you'd prefer they appeared in the source as 3 lists of 10 to be able to
	style/float them.
'splitCount' =&gt; the number of "parallel" types. defaults to 3</p>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function generate(array
        $data,
            array
        $settingsÂ )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt>
            <code>$data</code>
          </dt>
          <dd>data to loop on</dd>
          <dt>
            <code>$settings</code>
          </dt>
          <dd/>
        </dl>
        <h2 id="return">Returns</h2>
        <dl class="styled">
          <dt>string</dt>
          <dd>html representation of the passed data</dd>
        </dl>
      </section>
    </div>
    <footer xmlns:git="http://xml.phpdox.net/gitlog#">
      <span>Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts</span>
    </footer>
  </body>
</html>
