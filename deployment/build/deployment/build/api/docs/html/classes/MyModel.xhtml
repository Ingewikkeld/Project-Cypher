<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pdxf="http://xml.phpdox.net/functions" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head xmlns:git="http://xml.phpdox.net/gitlog#">
    <title>phpDox - MyModel</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav xmlns:git="http://xml.phpdox.net/gitlog#" class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../reports/index.xhtml">Reports</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">MyModel</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="#history">History</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>MyModel</h1>
        <h4>Model enhancements for Cake2</h4>
        <p/>
        <ul>
          <li>Author: Mark Scherer</li>
          <li>License: MIT</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class MyModel
                extends <a title="Model" href="../classes/Model.xhtml">Model</a>
            {<br/><ul class="none"><li>// members</li><li>public
                         <a href="#members">$recursive</a>;
                    </li><li>public
                         <a href="#members">$actsAs</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="MyModel" href="../classes/MyModel/__construct.xhtml">__construct</a>()
                    </li><li>public mixed <a title="MyModel" href="../classes/MyModel/deconstruct.xhtml">deconstruct</a>()
                    </li><li>public static mixed <a title="MyModel" href="../classes/MyModel/enum.xhtml">enum</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/onError.xhtml">onError</a>()
                    </li><li>public string <a title="MyModel" href="../classes/MyModel/lastError.xhtml">lastError</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/virtualFields.xhtml">virtualFields</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/escapeValue.xhtml">escapeValue</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/value.xhtml">value</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/up.xhtml">up</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/_paginateCount.xhtml">_paginateCount</a>()
                    </li><li>public int <a title="MyModel" href="../classes/MyModel/getNextAutoIncrement.xhtml">getNextAutoIncrement</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/init.xhtml">init</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/saveAll.xhtml">saveAll</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/beforeValidate.xhtml">beforeValidate</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/deleteCache.xhtml">deleteCache</a>()
                    </li><li>public string <a title="MyModel" href="../classes/MyModel/subquery.xhtml">subquery</a>()
                    </li><li>public array <a title="MyModel" href="../classes/MyModel/find.xhtml">find</a>()
                    </li><li>protected void <a title="MyModel" href="../classes/MyModel/_find.xhtml">_find</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/_getCachedResults.xhtml">_getCachedResults</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/findNeighbors.xhtml">findNeighbors</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/neighbors.xhtml">neighbors</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateKey.xhtml">validateKey</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateEnum.xhtml">validateEnum</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateIdentical.xhtml">validateIdentical</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateUnique.xhtml">validateUnique</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateUniqueExt.xhtml">validateUniqueExt</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateUrl.xhtml">validateUrl</a>()
                    </li><li>protected string <a title="MyModel" href="../classes/MyModel/_autoCompleteUrl.xhtml">_autoCompleteUrl</a>()
                    </li><li>protected bool <a title="MyModel" href="../classes/MyModel/_validUrl.xhtml">_validUrl</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateDateTime.xhtml">validateDateTime</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateDate.xhtml">validateDate</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateTime.xhtml">validateTime</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/validateDateRange.xhtml">validateDateRange</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/validateTimeRange.xhtml">validateTimeRange</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateUndisposable.xhtml">validateUndisposable</a>()
                    </li><li>public boolean <a title="MyModel" href="../classes/MyModel/isUndisposableEmail.xhtml">isUndisposableEmail</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/validateNotBlocked.xhtml">validateNotBlocked</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/umlautsOrderFix.xhtml">umlautsOrderFix</a>()
                    </li><li>public array <a title="MyModel" href="../classes/MyModel/set.xhtml">set</a>()
                    </li><li>public array <a title="MyModel" href="../classes/MyModel/whitelist.xhtml">whitelist</a>()
                    </li><li>public array <a title="MyModel" href="../classes/MyModel/guaranteeFields.xhtml">guaranteeFields</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/requireFields.xhtml">requireFields</a>()
                    </li><li>public array <a title="MyModel" href="../classes/MyModel/blacklist.xhtml">blacklist</a>()
                    </li><li>public mixed <a title="MyModel" href="../classes/MyModel/get.xhtml">get</a>()
                    </li><li>public bool|array <a title="MyModel" href="../classes/MyModel/update.xhtml">update</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/inc.xhtml">inc</a>()
                    </li><li>public ARRAY <a title="MyModel" href="../classes/MyModel/toggleField.xhtml">toggleField</a>()
                    </li><li>public bool <a title="MyModel" href="../classes/MyModel/truncate.xhtml">truncate</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/recursiveSelect.xhtml">recursiveSelect</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/generateNestedList.xhtml">generateNestedList</a>()
                    </li><li>public void <a title="MyModel" href="../classes/MyModel/_generateNestedList.xhtml">_generateNestedList</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div xmlns:git="http://xml.phpdox.net/gitlog#" class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/Model.xhtml">Model</a>
            </li>
          </ul>
          <h4>Extended by</h4>
          <ul>
            <li>
              <a href="../classes/Post.xhtml">Post</a>
            </li>
            <li>
              <a href="../classes/AppTestModel.xhtml">AppTestModel</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <h2 xmlns:git="http://xml.phpdox.net/gitlog#" id="tasks">Tasks</h2>
        <table xmlns:git="http://xml.phpdox.net/gitlog#" class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">902</td>
            <td>make static</td>
          </tr>
        </table>
        <h2 id="members">Members</h2>
        <div xmlns:git="http://xml.phpdox.net/gitlog#" class="styled members">
          <h4>public</h4>
          <ul class="members">
            <li id="actsAs">
              <strong>$actsAs</strong>
            </li>
            <li id="recursive">
              <strong>$recursive</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div xmlns:git="http://xml.phpdox.net/gitlog#" class="styled">
          <h4>protected</h4>
          <ul>
            <li id="_autoCompleteUrl"><a title="MyModel" href="../classes/MyModel/_autoCompleteUrl.xhtml">_autoCompleteUrl()</a>
                — prepend protocol if missing</li>
            <li id="_find"><a title="MyModel" href="../classes/MyModel/_find.xhtml">_find()</a>
                — This code will add formatted list functionallity to find you can easy replace the $this-&gt;Model-&gt;find('list'); with $this-&gt;Model-&gt;find('formattedlist', array('fields' =&gt; array('Model.id', 'Model.field1', 'Model.field2', 'Model.field3'), 'format' =&gt; '%s-%s %s')); and get option tag output of: Model.field1-Model.field2 Model.field3. Even better part is being able to setup your own format for the output!</li>
            <li id="_validUrl"><a title="MyModel" href="../classes/MyModel/_validUrl.xhtml">_validUrl()</a>
                — checks if a url is valid</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="MyModel" href="../classes/MyModel/__construct.xhtml">__construct()</a>
                — Specific Stuff</li>
            <li id="_generateNestedList"><a title="MyModel" href="../classes/MyModel/_generateNestedList.xhtml">_generateNestedList()</a>
                — from http://othy.wordpress.com/2006/06/03/generatenestedlist/</li>
            <li id="_getCachedResults">
              <a title="MyModel" href="../classes/MyModel/_getCachedResults.xhtml">_getCachedResults()</a>
            </li>
            <li id="_paginateCount"><a title="MyModel" href="../classes/MyModel/_paginateCount.xhtml">_paginateCount()</a>
                — improve paginate count for "normal queries"</li>
            <li id="beforeValidate"><a title="MyModel" href="../classes/MyModel/beforeValidate.xhtml">beforeValidate()</a>
                — enables HABTM-Validation e.g. with 'rule' =&gt; array('multiple', array('min' =&gt; 2)) 2010-01-14 ms</li>
            <li id="blacklist"><a title="MyModel" href="../classes/MyModel/blacklist.xhtml">blacklist()</a>
                — instead of whitelisting</li>
            <li id="deconstruct"><a title="MyModel" href="../classes/MyModel/deconstruct.xhtml">deconstruct()</a>
                — Deconstructs a complex data type (array or object) into a single field value.</li>
            <li id="deleteCache">
              <a title="MyModel" href="../classes/MyModel/deleteCache.xhtml">deleteCache()</a>
            </li>
            <li id="enum"><a title="MyModel" href="../classes/MyModel/enum.xhtml">enum()</a>
                — The main method for any enumeration, should be called statically Now also supports reordering/filtering</li>
            <li id="escapeValue"><a title="MyModel" href="../classes/MyModel/escapeValue.xhtml">escapeValue()</a>
                — HIGHLY EXPERIMENTAL manually escape value for updateAll() etc 2011-06-27 ms</li>
            <li id="find"><a title="MyModel" href="../classes/MyModel/find.xhtml">find()</a>
                — Wrapper find() to cache sql queries.</li>
            <li id="findNeighbors"><a title="MyModel" href="../classes/MyModel/findNeighbors.xhtml">findNeighbors()</a>
                — core-fix for multiple sort orders</li>
            <li id="generateNestedList"><a title="MyModel" href="../classes/MyModel/generateNestedList.xhtml">generateNestedList()</a>
                — from http://othy.wordpress.com/2006/06/03/generatenestedlist/ NEEDS parent_id //TODO refactor for 1.2 2009-08-12 ms</li>
            <li id="get"><a title="MyModel" href="../classes/MyModel/get.xhtml">get()</a>
                — Shortcut method to find a specific entry via primary key</li>
            <li id="getNextAutoIncrement"><a title="MyModel" href="../classes/MyModel/getNextAutoIncrement.xhtml">getNextAutoIncrement()</a>
                — return the next auto increment id from the current table UUIDs will return false</li>
            <li id="guaranteeFields"><a title="MyModel" href="../classes/MyModel/guaranteeFields.xhtml">guaranteeFields()</a>
                — make sure required fields exists - in order to properly validate them</li>
            <li id="inc"><a title="MyModel" href="../classes/MyModel/inc.xhtml">inc()</a>
                — automagic increasing of a field with e.g.: $this-&gt;id = ID; $this-&gt;inc('weight',3);</li>
            <li id="init"><a title="MyModel" href="../classes/MyModel/init.xhtml">init()</a>
                — workaround for a cake bug which sets empty fields to NULL in Model::set() we cannot use if (isset() &amp;&amp; empty()) statements without this fix</li>
            <li id="isUndisposableEmail"><a title="MyModel" href="../classes/MyModel/isUndisposableEmail.xhtml">isUndisposableEmail()</a>
                — NOW: can be set to work offline only (if server is down etc) Checks if a email is not from a garbige hoster</li>
            <li id="lastError">
              <a title="MyModel" href="../classes/MyModel/lastError.xhtml">lastError()</a>
            </li>
            <li id="neighbors">
              <a title="MyModel" href="../classes/MyModel/neighbors.xhtml">neighbors()</a>
            </li>
            <li id="onError"><a title="MyModel" href="../classes/MyModel/onError.xhtml">onError()</a>
                — Catch database errors before it’s too late //TODO: testing 2010-11-04 ms</li>
            <li id="recursiveSelect"><a title="MyModel" href="../classes/MyModel/recursiveSelect.xhtml">recursiveSelect()</a>
                — recursive Dropdown Lists NEEDS tree behavior, NEEDS lft, rght, parent_id (!) //FIXME 2008-01-02 ms</li>
            <li id="requireFields"><a title="MyModel" href="../classes/MyModel/requireFields.xhtml">requireFields()</a>
                — make certain fields a requirement for the form to validate (they must only be present - can still be empty, though!)</li>
            <li id="saveAll"><a title="MyModel" href="../classes/MyModel/saveAll.xhtml">saveAll()</a>
                — Fix for non atomic queries (MyISAM  etc) and saveAll to still return just the boolean result Otherwise you would have to interate over all result values to find out if the save was successful.</li>
            <li id="set"><a title="MyModel" href="../classes/MyModel/set.xhtml">set()</a>
                — set + guaranteeFields! Extends the core set function (only using data!!!)</li>
            <li id="subquery"><a title="MyModel" href="../classes/MyModel/subquery.xhtml">subquery()</a>
                — Makes a subquery</li>
            <li id="toggleField"><a title="MyModel" href="../classes/MyModel/toggleField.xhtml">toggleField()</a>
                — Toggles Field (Important/Deleted/Primary etc)</li>
            <li id="truncate"><a title="MyModel" href="../classes/MyModel/truncate.xhtml">truncate()</a>
                — truncate TABLE (already validated, that table exists)</li>
            <li id="umlautsOrderFix"><a title="MyModel" href="../classes/MyModel/umlautsOrderFix.xhtml">umlautsOrderFix()</a>
                — CAREFUL: use LIMIT due to Starker Serverlastigkeit! or CACHE it!</li>
            <li id="up"><a title="MyModel" href="../classes/MyModel/up.xhtml">up()</a>
                — TODO: move to behavior (Incremental)</li>
            <li id="update"><a title="MyModel" href="../classes/MyModel/update.xhtml">update()</a>
                — Update a row with certain fields (dont use "Model" as super-key)</li>
            <li id="validateDate"><a title="MyModel" href="../classes/MyModel/validateDate.xhtml">validateDate()</a>
                — Validation of Date fields (as the core one is buggy!!!)</li>
            <li id="validateDateRange"><a title="MyModel" href="../classes/MyModel/validateDateRange.xhtml">validateDateRange()</a>
                — Validation of Date Fields (&gt;= minDate &amp;&amp; &lt;= maxDate)</li>
            <li id="validateDateTime"><a title="MyModel" href="../classes/MyModel/validateDateTime.xhtml">validateDateTime()</a>
                — Validation of DateTime Fields (both Date and Time together)</li>
            <li id="validateEnum"><a title="MyModel" href="../classes/MyModel/validateEnum.xhtml">validateEnum()</a>
                — checks if the passed enum value is valid</li>
            <li id="validateIdentical"><a title="MyModel" href="../classes/MyModel/validateIdentical.xhtml">validateIdentical()</a>
                — checks if the content of 2 fields are equal Does not check on empty fields! Return TRUE even if both are empty (secure against empty in another rule)!</li>
            <li id="validateKey"><a title="MyModel" href="../classes/MyModel/validateKey.xhtml">validateKey()</a>
                — validates a primary or foreign key depending on the current schema data for this field recognizes uuid (char36) and aiid (int10 unsigned) - not yet mixed (varchar36) more useful than using numeric or notEmpty which are type specific</li>
            <li id="validateNotBlocked"><a title="MyModel" href="../classes/MyModel/validateNotBlocked.xhtml">validateNotBlocked()</a>
                — Is blocked email? //TODO: move outside of MyModel?</li>
            <li id="validateTime"><a title="MyModel" href="../classes/MyModel/validateTime.xhtml">validateTime()</a>
                — Validation of Time fields</li>
            <li id="validateTimeRange"><a title="MyModel" href="../classes/MyModel/validateTimeRange.xhtml">validateTimeRange()</a>
                — Validation of Time Fields (&gt;= minTime &amp;&amp; &lt;= maxTime)</li>
            <li id="validateUndisposable"><a title="MyModel" href="../classes/MyModel/validateUndisposable.xhtml">validateUndisposable()</a>
                — model validation rule for email addresses</li>
            <li id="validateUnique"><a title="MyModel" href="../classes/MyModel/validateUnique.xhtml">validateUnique()</a>
                — checks a record, if it is unique - depending on other fields in this table (transfered as array) example in model: 'rule' =&gt; array ('validateUnique', array('belongs_to_table_id','some_id','user_id')), if all keys (of the array transferred) match a record, return false, otherwise true</li>
            <li id="validateUniqueExt">
              <a title="MyModel" href="../classes/MyModel/validateUniqueExt.xhtml">validateUniqueExt()</a>
            </li>
            <li id="validateUrl"><a title="MyModel" href="../classes/MyModel/validateUrl.xhtml">validateUrl()</a>
                — Checks if a url is valid AND accessable (returns false otherwise)</li>
            <li id="value"><a title="MyModel" href="../classes/MyModel/value.xhtml">value()</a>
                — HIGHLY EXPERIMENTAL</li>
            <li id="virtualFields"><a title="MyModel" href="../classes/MyModel/virtualFields.xhtml">virtualFields()</a>
                — combine virtual fields with fields values of find() USAGE: $this-&gt;Model-&gt;find('all', array('fields' =&gt; $this-&gt;Model-&gt;virtualFields('full_name'))); Also adds the field to the virtualFields array of the model (for correct result) TODO: adding of fields only temperory!</li>
            <li id="whitelist">
              <a title="MyModel" href="../classes/MyModel/whitelist.xhtml">whitelist()</a>
            </li>
          </ul>
        </div>
        <h2 id="history">History</h2>
        <ul xmlns:git="http://xml.phpdox.net/gitlog#" class="styled history">
          <li>
            <h3>2013-10-06T19:40:29+00:00 (commit #<span title="f16525be325aa16218dfea4fe983ccf2a60b79b9">f16525b</span>)</h3>
            <div>
              <p>
                        Author: Paul Edenburg (pauledenburg@gmail.com) /
                        Commiter: Paul Edenburg (pauledenburg@gmail.com)
                    </p>
              <pre class="wrapped">wijzigingen na het aanmaken van een nieuw phpstrom project</pre>
            </div>
          </li>
          <li>
            <h3>2013-07-29T20:18:45+00:00 (commit #<span title="287b8750eddef6446e689ccd35cee74b32cde2ed">287b875</span>)</h3>
            <div>
              <p>
                        Author: Paul Edenburg (paul@lamp2.(none)) /
                        Commiter: Paul Edenburg (paul@lamp2.(none))
                    </p>
              <pre class="wrapped">rechten zijn gewijzigd</pre>
            </div>
          </li>
          <li>
            <h3>2013-06-26T15:55:26+00:00 (commit #<span title="58d361958cff9f7a6a85bed1ef717e1029d99d24">58d3619</span>)</h3>
            <div>
              <p>
                        Author: Paul Edenburg (paul@i2s.nl) /
                        Commiter: Paul Edenburg (paul@i2s.nl)
                    </p>
              <pre class="wrapped">phpstorm connect?</pre>
            </div>
          </li>
          <li>
            <h3>2013-06-14T14:30:14+00:00 (commit #<span title="ab510a8ba8b3726396604720ff22cc62d62cda63">ab510a8</span>)</h3>
            <div>
              <p>
                        Author: Paul Edenburg (paul@i2s.nl) /
                        Commiter: Paul Edenburg (paul@i2s.nl)
                    </p>
              <pre class="wrapped">hele hoop opgelost, ik had het eerder moeten committen :$</pre>
            </div>
          </li>
        </ul>
      </section>
    </div>
    <footer xmlns:git="http://xml.phpdox.net/gitlog#">
      <span>Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts</span>
    </footer>
  </body>
</html>
