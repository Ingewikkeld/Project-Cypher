<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pdxf="http://xml.phpdox.net/functions" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head xmlns:git="http://xml.phpdox.net/gitlog#">
    <title>phpDox - RevisionBehavior</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav xmlns:git="http://xml.phpdox.net/gitlog#" class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../reports/index.xhtml">Reports</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">RevisionBehavior</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="#history">History</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>RevisionBehavior</h1>
        <h4>Revision Behavior</h4>
        <p>Revision is a solution for adding undo and other versioning functionality<br/>to your database models. It is set up to be easy to apply to your project,<br/>to be easy to use and not get in the way of your other model activity.<br/>It is also intended to work well with it's sibling, LogableBehavior.<br/><br/>Feature list :<br/><br/>- Easy to install<br/>- Automagically save revision on model save<br/>- Able to ignore model saves which only contain certain fields<br/>- Limit number of revisions to keep, will delete oldest<br/>- Undo functionality (or update to any revision directly)<br/>- Revert to a datetime (and even do so cascading)<br/>- Get a diff model array to compare two or more revisions<br/>- Inspect any or all revisions of a model<br/>- Work with Tree Behavior<br/>- Includes beforeUndelete and afterUndelete callbacks<br/>- NEW As of 1.2 behavior will revision HABTM relationships (from one way)<br/><br/>Install instructions :<br/><br/>- Place the newest version of RevisionBehavior in your app/models/behaviors folder<br/>- Add the behavior to AppModel (or single models if you prefer)<br/>- Create a shadow table for each model that you want revision for.<br/>- Behavior will gracefully do nothing for models that has behavior, without table<br/>- If adding to an existing project, run the initializeRevisions() method once for each model.<br/><br/>About shadow tables :<br/><br/>You should make these AFTER you have baked your ordinary tables as they may interfer. By default<br/>the tables should be named "[prefix][model_table_name]_revs" If you wish to change the suffix you may<br/>do so in the property called $revision_suffix found bellow. Also by default the behavior expects<br/>the revision tables to be in the same dbconfig as the model, but you may change this on a per<br/>model basis with the useDbConfig config option.<br/><br/>Add the same fields as in the live table, with 3 important differences.<br/>- The 'id' field should NOT be the primary key, nor auto increment<br/>- Add the fields 'version_id' (int, primary key, autoincrement) and<br/>'version_created' (datetime)<br/>- Skipp fields that should not be saved in shadowtable (lft,right,weight for instance)<br/><br/>Configuration :<br/><br/>- 'limit' : number of revisions to keep, must be at least 2<br/>- 'ignore' : array containing the name of fields to ignore<br/>- 'auto' : boolean when false the behavior will NOT generate revisions in afterSave<br/>- 'useDbConfig' : string/null Name of dbConfig to use. Null to use Model's<br/><br/>Limit functionality :<br/>The shadow table will save a revision copy when it saves live data, so the newest<br/>row in the shadow table will (in most cases) be the same as the current live data.<br/>The exception is when the ignore field functionality is used and the live data is<br/>updated only in those fields.<br/><br/>Ignore field(s) functionality :<br/>If you wish to be able to update certain fields without generating new revisions,<br/>you can add those fields to the configuration ignore array. Any time the behavior's<br/>afterSave is called with just primary key and these fields, it will NOT generate<br/>a new revision. It WILL however save these fields together with other fields when it<br/>does save a revision. You will probably want to set up cron or otherwise call<br/>createRevision() to update these fields at some points.<br/><br/>Auto functionality :<br/>By default the behavior will insert itself into the Model's save process by implementing<br/>beforeSave and afterSave. In afterSave, the behavior will save a new revision of the dataset<br/>that is now the live data. If you do NOT want this automatic behavior, you may set the config<br/>option 'auto' to false. Then the shadow table will remain empty unless you call createRevisions<br/>manually.<br/><br/>HABTM revision feature :<br/>In order to do revision on HABTM relationship, add a text field to the main model's shadow table<br/>with the same name as the association, ie if Article habtm ArticleTag as Tag, add a field 'Tag'<br/>to articles_revs.<br/>NB! In version 1.2 and up to current, Using HABTM revision requires that both models uses this<br/>behavior (even if secondary model does not have a shadow table).<br/><br/>1.1.1 =&gt; 1.1.2 changelog<br/>- revisions() got new paramter: $include_current<br/>This now defaults to false, resulting in a change from 1.1.1. See tests<br/><br/>1.1.6 =&gt; 1.2<br/>- includes HABTM revision control (one way)<br/><br/>1.2 =&gt; 1.2.1<br/>- api change in revertToDate, added paramter for force delete if reverting to before earliest<br/><br/>1.2.6 =&gt; 1.2.7<br/>- api change: removed shadow(), changed revertToDate() to only recurse into related models that<br/>are dependent when cascade is true<br/><br/>2.0.5 =&gt; CakePHP 2.x</p>
        <ul>
          <li>Author: Ronny Vindenes</li>
          <li>License: MIT</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class RevisionBehavior
                extends <a title="ModelBehavior" href="../classes/ModelBehavior.xhtml">ModelBehavior</a>
            {<br/><ul class="none"><li>// members</li><li>public
                         <a href="#members">$settings</a>;
                    </li><li>protected
                         <a href="#members">$revision_suffix</a>;
                    </li><li>protected
                         <a href="#members">$defaults</a>;
                    </li><li>protected
                         <a href="#members">$oldData</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="RevisionBehavior" href="../classes/RevisionBehavior/setup.xhtml">setup</a>()
                    </li><li>public boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/createRevision.xhtml">createRevision</a>()
                    </li><li>public array <a title="RevisionBehavior" href="../classes/RevisionBehavior/diff.xhtml">diff</a>()
                    </li><li>public boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/initializeRevisions.xhtml">initializeRevisions</a>()
                    </li><li>protected void <a title="RevisionBehavior" href="../classes/RevisionBehavior/init.xhtml">init</a>()
                    </li><li>public array <a title="RevisionBehavior" href="../classes/RevisionBehavior/newest.xhtml">newest</a>()
                    </li><li>public array <a title="RevisionBehavior" href="../classes/RevisionBehavior/oldest.xhtml">oldest</a>()
                    </li><li>public array <a title="RevisionBehavior" href="../classes/RevisionBehavior/previous.xhtml">previous</a>()
                    </li><li>public boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/revertAll.xhtml">revertAll</a>()
                    </li><li>public boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/revertTo.xhtml">revertTo</a>()
                    </li><li>public boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/revertToDate.xhtml">revertToDate</a>()
                    </li><li>public array <a title="RevisionBehavior" href="../classes/RevisionBehavior/revisions.xhtml">revisions</a>()
                    </li><li>public boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/undelete.xhtml">undelete</a>()
                    </li><li>public boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/undo.xhtml">undo</a>()
                    </li><li>public void <a title="RevisionBehavior" href="../classes/RevisionBehavior/updateRevisions.xhtml">updateRevisions</a>()
                    </li><li>public void <a title="RevisionBehavior" href="../classes/RevisionBehavior/afterDelete.xhtml">afterDelete</a>()
                    </li><li>public boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/afterSave.xhtml">afterSave</a>()
                    </li><li>public boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/beforeDelete.xhtml">beforeDelete</a>()
                    </li><li>public boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/beforeSave.xhtml">beforeSave</a>()
                    </li><li>protected boolean <a title="RevisionBehavior" href="../classes/RevisionBehavior/createShadowModel.xhtml">createShadowModel</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div xmlns:git="http://xml.phpdox.net/gitlog#" class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/ModelBehavior.xhtml">ModelBehavior</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div xmlns:git="http://xml.phpdox.net/gitlog#" class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="defaults"><strong>$defaults</strong>
                —
                array<br/><span class="indent">Defaul setting values</span></li>
            <li id="oldData"><strong>$oldData</strong>
                —
                array<br/><span class="indent">Old data, used to detect changes</span></li>
            <li id="revision_suffix"><strong>$revision_suffix</strong>
                —
                string<br/><span class="indent">Shadow table prefix Only change this value if it causes table name crashes</span></li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="settings"><strong>$settings</strong>
                —
                array<br/><span class="indent">Behavior settings</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div xmlns:git="http://xml.phpdox.net/gitlog#" class="styled">
          <h4>protected</h4>
          <ul>
            <li id="createShadowModel"><a title="RevisionBehavior" href="../classes/RevisionBehavior/createShadowModel.xhtml">createShadowModel()</a>
                — Returns a generic model that maps to the current $Model's shadow table.</li>
            <li id="init"><a title="RevisionBehavior" href="../classes/RevisionBehavior/init.xhtml">init()</a>
                — saves revisions for rows matching page and limit given</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="afterDelete"><a title="RevisionBehavior" href="../classes/RevisionBehavior/afterDelete.xhtml">afterDelete()</a>
                — Causes revision for habtm associated models if that model does version control on their relationship. BeforeDelete identifies the related models that will need to do the revision update in afterDelete. Uses</li>
            <li id="afterSave"><a title="RevisionBehavior" href="../classes/RevisionBehavior/afterSave.xhtml">afterSave()</a>
                — Will create a new revision if changes have been made in the models non-ignore fields.</li>
            <li id="beforeDelete"><a title="RevisionBehavior" href="../classes/RevisionBehavior/beforeDelete.xhtml">beforeDelete()</a>
                — Causes revision for habtm associated models if that model does version control on their relationship. BeforeDelete identifies the related models that will need to do the revision update in afterDelete.</li>
            <li id="beforeSave"><a title="RevisionBehavior" href="../classes/RevisionBehavior/beforeSave.xhtml">beforeSave()</a>
                — Revision uses the beforeSave callback to remember the old data for comparison in afterSave</li>
            <li id="createRevision"><a title="RevisionBehavior" href="../classes/RevisionBehavior/createRevision.xhtml">createRevision()</a>
                — Manually create a revision of the current record of Model-&gt;id</li>
            <li id="diff"><a title="RevisionBehavior" href="../classes/RevisionBehavior/diff.xhtml">diff()</a>
                — Returns an array that maps to the Model, only with multiple values for fields that has been changed</li>
            <li id="initializeRevisions"><a title="RevisionBehavior" href="../classes/RevisionBehavior/initializeRevisions.xhtml">initializeRevisions()</a>
                — Will create a current revision of all rows in Model, if none exist.</li>
            <li id="newest"><a title="RevisionBehavior" href="../classes/RevisionBehavior/newest.xhtml">newest()</a>
                — Finds the newest revision, including the current one.</li>
            <li id="oldest"><a title="RevisionBehavior" href="../classes/RevisionBehavior/oldest.xhtml">oldest()</a>
                — Find the oldest revision for the current Model-&gt;id If no limit is used on revision and revision has been enabled for the model since start, this call will return the original first record.</li>
            <li id="previous"><a title="RevisionBehavior" href="../classes/RevisionBehavior/previous.xhtml">previous()</a>
                — Find the second newest revisions, including the current one.</li>
            <li id="revertAll"><a title="RevisionBehavior" href="../classes/RevisionBehavior/revertAll.xhtml">revertAll()</a>
                — Revert all rows matching conditions to given date.</li>
            <li id="revertTo"><a title="RevisionBehavior" href="../classes/RevisionBehavior/revertTo.xhtml">revertTo()</a>
                — Revert current Model-&gt;id to the given revision id Will return false if version id is invalid or save fails</li>
            <li id="revertToDate"><a title="RevisionBehavior" href="../classes/RevisionBehavior/revertToDate.xhtml">revertToDate()</a>
                — Revert to the oldest revision after the given datedate.</li>
            <li id="revisions"><a title="RevisionBehavior" href="../classes/RevisionBehavior/revisions.xhtml">revisions()</a>
                — Returns a comeplete list of revisions for the current Model-&gt;id.</li>
            <li id="setup"><a title="RevisionBehavior" href="../classes/RevisionBehavior/setup.xhtml">setup()</a>
                — Configure the behavior through the Model::actsAs property</li>
            <li id="undelete"><a title="RevisionBehavior" href="../classes/RevisionBehavior/undelete.xhtml">undelete()</a>
                — Undoes an delete by saving the last revision to the Model Will return false if this Model-&gt;id exist in the live table.</li>
            <li id="undo"><a title="RevisionBehavior" href="../classes/RevisionBehavior/undo.xhtml">undo()</a>
                — Update to previous revision</li>
            <li id="updateRevisions"><a title="RevisionBehavior" href="../classes/RevisionBehavior/updateRevisions.xhtml">updateRevisions()</a>
                — Calls create revision for all rows matching primary key list of $idlist</li>
          </ul>
        </div>
        <h2 id="history">History</h2>
        <ul xmlns:git="http://xml.phpdox.net/gitlog#" class="styled history">
          <li>
            <h3>2013-10-06T19:40:29+00:00 (commit #<span title="f16525be325aa16218dfea4fe983ccf2a60b79b9">f16525b</span>)</h3>
            <div>
              <p>
                        Author: Paul Edenburg (pauledenburg@gmail.com) /
                        Commiter: Paul Edenburg (pauledenburg@gmail.com)
                    </p>
              <pre class="wrapped">wijzigingen na het aanmaken van een nieuw phpstrom project</pre>
            </div>
          </li>
          <li>
            <h3>2013-07-29T20:18:45+00:00 (commit #<span title="287b8750eddef6446e689ccd35cee74b32cde2ed">287b875</span>)</h3>
            <div>
              <p>
                        Author: Paul Edenburg (paul@lamp2.(none)) /
                        Commiter: Paul Edenburg (paul@lamp2.(none))
                    </p>
              <pre class="wrapped">rechten zijn gewijzigd</pre>
            </div>
          </li>
          <li>
            <h3>2013-06-26T15:55:26+00:00 (commit #<span title="58d361958cff9f7a6a85bed1ef717e1029d99d24">58d3619</span>)</h3>
            <div>
              <p>
                        Author: Paul Edenburg (paul@i2s.nl) /
                        Commiter: Paul Edenburg (paul@i2s.nl)
                    </p>
              <pre class="wrapped">phpstorm connect?</pre>
            </div>
          </li>
          <li>
            <h3>2013-06-14T14:30:14+00:00 (commit #<span title="ab510a8ba8b3726396604720ff22cc62d62cda63">ab510a8</span>)</h3>
            <div>
              <p>
                        Author: Paul Edenburg (paul@i2s.nl) /
                        Commiter: Paul Edenburg (paul@i2s.nl)
                    </p>
              <pre class="wrapped">hele hoop opgelost, ik had het eerder moeten committen :$</pre>
            </div>
          </li>
        </ul>
      </section>
    </div>
    <footer xmlns:git="http://xml.phpdox.net/gitlog#">
      <span>Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts</span>
    </footer>
  </body>
</html>
