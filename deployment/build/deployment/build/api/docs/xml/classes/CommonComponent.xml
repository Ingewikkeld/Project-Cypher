<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="CommonComponent" namespace="" name="CommonComponent" abstract="false" final="false" start="17" end="1576">
  <file path="app/Plugin/Tools/Controller/Component" file="CommonComponent.php" realpath="/home/vagrant/socsoc/app/Plugin/Tools/Controller/Component/CommonComponent.php" size="43345" time="2014-04-09T08:38:48+00:00" unixtime="1397032728" sha1="0ca40c8e6414db86b2d530567487f5bd28005043"/>
  <docblock>
    <description compact="A component included in every app to take care of common stuff"/>
    <author value="Mark Scherer"/>
    <copyright value="2012 Mark Scherer"/>
    <license name="MIT">2012-02-08 ms</license>
  </docblock>
  <extends full="Component" namespace="" name="Component"/>
  <member name="components" type="array" visibility="public" line="19"/>
  <member name="allowedChars" type="array" visibility="public" line="21"/>
  <member name="removeChars" type="{unknown}" default="false" visibility="public" line="22"/>
  <member name="paginationMaxLimit" type="integer" default="100" visibility="public" line="24"/>
  <member name="counterStartTime" type="{unknown}" default="null" visibility="public" line="25"/>
  <member name="debugContent" type="array" visibility="public" line="28"/>
  <method name="initialize" start="35" end="39" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="for automatic startup for this helper the controller has to be passed as reference 2009-12-19 ms"/>
    </docblock>
    <parameter name="Controller" byreference="false" type="object">
      <type full="\\Controller" namespace="\" name="Controller"/>
    </parameter>
  </method>
  <method name="startup" start="56" end="84" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="for this helper the controller has to be passed as reference for manual startup with $disableStartup = true (requires this to be called prior to any other method) 2009-12-19 ms"/>
    </docblock>
    <parameter name="Controller" byreference="false" type="object" default="null">
      <type full="\\Controller" namespace="\" name="Controller"/>
    </parameter>
    <inline>
      <comment value="DATA PREPARATION *" line="57"/>
      <comment value="Information Gathering *" line="72"/>
      <comment value="Layout *" line="80"/>
    </inline>
  </method>
  <method name="beforeRender" start="96" end="122" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Called after the Controller::beforeRender(), after the view class is loaded, and before the Controller::render()">Created: 2010-10-10</description>
      <param description="Controller with components to beforeRender" type="object" variable="$Controller"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
      <access value="public"/>
      <author value="deltachaos"/>
    </docblock>
    <parameter name="Controller" byreference="false" type="object">
      <type full="\\Controller" namespace="\" name="Controller"/>
    </parameter>
    <inline>
      <comment value="The Header can be read with JavaScript and a custom Message can be displayed" line="102"/>
      <comment value="AJAX debug off" line="105"/>
      <comment value="custom options" line="109"/>
    </inline>
  </method>
  <method name="isPosted" start="132" end="134" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="convinience method to check on POSTED data doesnt matter if its post or put"/>
      <return description="$isPost" type="object">2011-12-09 ms<type full="bool" namespace="" name="bool"/></return>
    </docblock>
  </method>
  <method name="isPost" start="137" end="140" abstract="false" final="false" static="false" visibility="public"/>
  <method name="flashMessage" start="150" end="167" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Updates FlashMessage SessionContent (to enable unlimited messages of one case)"/>
      <param type="object" variable="messagestring">
        <type full="STRING" namespace="" name="STRING"/>
      </param>
      <param description="class ['error', 'warning', 'success', 'info']" type="object">
        <type full="STRING" namespace="" name="STRING"/>
      </param>
      <return type="object">2008-11-06 ms<type full="void" namespace="" name="void"/></return>
    </docblock>
    <parameter name="messagestring" byreference="false" type="{unknown}"/>
    <parameter name="class" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="transientFlashMessage" start="179" end="196" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="flashMessages that are not saved (only for current view) will be merged into the session flash ones prior to output"/>
      <param type="object" variable="messagestring">
        <type full="STRING" namespace="" name="STRING"/>
      </param>
      <param description="class ['error', 'warning', 'success', 'info']" type="object">
        <type full="STRING" namespace="" name="STRING"/>
      </param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
      <access value="static">2010-05-01 ms</access>
    </docblock>
    <parameter name="messagestring" byreference="false" type="{unknown}"/>
    <parameter name="class" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="postAndRedirect" start="202" end="217" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="not fully tested yet!"/>
    </docblock>
    <parameter name="url" byreference="false" type="{unknown}"/>
    <parameter name="data" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="$fields = array();" line="203"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="foreach ($data as $key =&gt; $val) {" line="204"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$fields[] = $key.'='.$val;" line="205"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="206"/>
    </inline>
  </method>
  <method name="addHelper" start="222" end="225" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <deprecated value=""/>
    </docblock>
    <parameter name="helpers" byreference="false" type="array"/>
  </method>
  <method name="addComponent" start="230" end="233" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <deprecated value=""/>
    </docblock>
    <parameter name="helpers" byreference="false" type="array"/>
  </method>
  <method name="loadHelper" start="242" end="244" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="add helper just in time (inside actions - only when needed) aware of plugins"/>
      <param description="(single string or multiple array)" type="mixed" variable="$helpers">2010-10-06 ms</param>
    </docblock>
    <parameter name="helpers" byreference="false" type="array"/>
  </method>
  <method name="loadLib" start="254" end="273" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="add lib just in time (inside actions - only when needed) aware of plugins and config array (if passed) ONLY works if constructor consists only of one param (settings)!"/>
      <param description="(single string or multiple array)" type="mixed" variable="$libs">e.g.: array('Tools.MyLib'=&gt;array('key'=&gt;'value'), ...)
2010-11-10 ms</param>
    </docblock>
    <parameter name="libs" byreference="false" type="array"/>
    <inline>
      <comment value="App::import('Lib', $lib);" line="265"/>
    </inline>
  </method>
  <method name="loadComponent" start="282" end="308" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="add component just in time (inside actions - only when needed) aware of plugins and config array (if passed)"/>
      <param description="(single string or multiple array)" type="mixed" variable="$components"/>
      <poaram value="bool $callbacks (defaults to true)">2011-11-02 ms</poaram>
    </docblock>
    <parameter name="components" byreference="false" type="array"/>
    <parameter name="callbacks" byreference="false" type="{unknown}" default="true"/>
    <inline>
      <comment value="$this-&gt;Paypal-&gt;initialize($this);" line="294"/>
      <comment value="App::import('Component', $component);" line="295"/>
      <comment value="$componentFullName = $componentName.'Component';" line="297"/>
    </inline>
  </method>
  <method name="getPassedParam" start="316" end="318" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Used to get the value of a named param"/>
      <param type="mixed" variable="$var"/>
      <param type="mixed" variable="$default"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="var" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getNamedParam" start="326" end="328" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Used to get the value of a named param"/>
      <param type="mixed" variable="$var"/>
      <param type="mixed" variable="$default"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="var" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getQueryParam" start="338" end="340" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Used to get the value of a get query"/>
      <deprecated value="- use request-&gt;query() instead"/>
      <param type="mixed" variable="$var"/>
      <param type="mixed" variable="$default"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="var" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="defaultUrlParams" start="345" end="352" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="2011-11-02 ms"/>
    </docblock>
  </method>
  <method name="currentUrl" start="360" end="375" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="return current url (with all missing params automatically added) necessary for Router::url() and comparison of urls to work"/>
      <param description="defaults to false = array" type="object" variable="$asString:">2009-12-26 ms<type full="bool" namespace="" name="bool"/></param>
    </docblock>
    <parameter name="asString" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="manualLogin" start="389" end="402" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Force login for a specific user id"/>
      <see value="DirectAuthentication auth adapter"/>
      <param type="array" variable="$data">- id</param>
      <return description="Success" type="boolean">2012-11-05 ms</return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="settings" byreference="false" type="array"/>
  </method>
  <method name="autoRedirect" start="414" end="419" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Smart Referer Redirect - will try to use an existing referer first otherwise it will use the default url"/>
      <param type="mixed" variable="$url"/>
      <param description="if redirect to the same controller/action (url) is allowed" type="object" variable="$allowSelf">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <param type="int" variable="$status">returns nothing and automatically redirects
2010-11-06 ms</param>
    </docblock>
    <parameter name="whereTo" byreference="false" type="{unknown}"/>
    <parameter name="allowSelf" byreference="false" type="{unknown}" default="true"/>
    <parameter name="status" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="postRedirect" start="430" end="432" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="should be a 303, but: Note: Many pre-HTTP/1.1 user agents do not understand the 303 status. When interoperability with such clients is a concern, the 302 status code may be used instead, since most user agents react to a 302 response as described here for 303."/>
      <see value="http://en.wikipedia.org/wiki/Post/Redirect/Get"/>
      <param type="mixed" variable="$url"/>
      <param type="int" variable="$status">TODO: change to 303 with backwardscompatability for older browsers...
2011-06-14 ms</param>
    </docblock>
    <parameter name="whereTo" byreference="false" type="{unknown}"/>
    <parameter name="status" byreference="false" type="integer" default="302"/>
  </method>
  <method name="autoPostRedirect" start="442" end="473" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="combine auto with post also allows whitelisting certain actions for autoRedirect (use Controller::$autoRedirectActions)"/>
      <param type="mixed" variable="$url"/>
      <param description="false to skip whitelisting" type="object" variable="$conditionalAutoRedirect">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <param type="int" variable="$status">2012-03-17 ms</param>
    </docblock>
    <parameter name="whereTo" byreference="false" type="{unknown}"/>
    <parameter name="conditionalAutoRedirect" byreference="false" type="{unknown}" default="true"/>
    <parameter name="status" byreference="false" type="integer" default="302"/>
    <inline>
      <fixme value="" line="454"/>
    </inline>
  </method>
  <method name="prgRedirect" start="483" end="487" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="only redirect to itself if cookies are on prevents problems with lost data Note: Many pre-HTTP/1.1 user agents do not understand the 303 status. When interoperability with such clients is a concern, the 302 status code may be used instead, since most user agents react to a 302 response as described here for 303."/>
      <see value="http://en.wikipedia.org/wiki/Post/Redirect/Get">TODO: change to 303 with backwardscompatability for older browsers...
2011-08-10 ms</see>
    </docblock>
    <parameter name="status" byreference="false" type="integer" default="302"/>
  </method>
  <method name="setMeta" start="497" end="510" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Handler for passing some meta data to the view uses CommonHelper to include them in the layout"/>
      <param type="object" variable="(relevance):">- title (10), description (9), robots(7), language(5), keywords (0)
- custom: abstract (1), category(1), GOOGLEBOT(0) ...
2010-12-29 ms<type full="type" namespace="" name="type"/></param>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="content" byreference="false" type="{unknown}"/>
    <parameter name="prep" byreference="false" type="{unknown}" default="true"/>
    <inline>
      <comment value="custom: &lt;meta name=”GOOGLEBOT” content=”unavailable_after: … GMT”&gt;" line="508"/>
    </inline>
  </method>
  <method name="_paginationLimit" start="524" end="534" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Checks to see if there is a limit set for pagination results to prevent overloading the database"/>
      <param type="string" variable="$value"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
      <author value="Jose Gonzalez (savant)"/>
      <deprecated value="(cake2.0 has it)"/>
    </docblock>
  </method>
  <method name="_habtmValidation" start="542" end="551" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Generates validation error messages for HABTM fields"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
      <author value="Dean"/>
    </docblock>
  </method>
  <method name="forceCache" start="559" end="563" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="set headers to cache this request"/>
      <param type="int" variable="$seconds"/>
      <return type="object">2009-12-26 ms<type full="void" namespace="" name="void"/></return>
    </docblock>
    <parameter name="seconds" byreference="false" type="{unknown}" default="HOUR"/>
  </method>
  <method name="isForeignReferer" start="570" end="579" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="referer checking (where does the user come from) 2009-12-19 ms"/>
    </docblock>
    <parameter name="ref" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="@ position 1 already the same" line="575"/>
    </inline>
  </method>
  <method name="denyAccess" start="582" end="590" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="echo returns(Configure::read('Config.language'));" line="586"/>
    </inline>
  </method>
  <method name="monitorCookieProblems" start="592" end="608" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="if (($language = Configure::read('Config.language')) === null) {" line="593"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$this-&gt;log('CookieProblem: SID '.session_id().' | '.env('REMOTE_ADDR').' | Ref: '.env('HTTP_REFERER').' |Agent: '.env('HTTP_USER_AGENT'));" line="594"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="595"/>
      <comment value="env('REMOTE_ADDR');" line="598"/>
    </inline>
  </method>
  <method name="cookiesDisabled" start="619" end="624" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="//todo: move to Utility?"/>
      <return description="true if disabled (bots, etc), false if enabled" type="boolean"/>
      <static value="">2010-11-20 ms</static>
    </docblock>
  </method>
  <method name="sql" start="632" end="655" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="quick sql debug from controller dynamically or statically from just about any other place in the script"/>
      <param description="TRUE to output and die, FALSE to log to file and continue" type="object" variable="$die:">2011-06-30 ms<type full="bool" namespace="" name="bool"/></param>
    </docblock>
    <parameter name="die" byreference="false" type="{unknown}" default="true"/>
    <inline>
      <comment value="output and die?" line="646"/>
      <comment value="log to file then and continue" line="651"/>
    </inline>
  </method>
  <method name="ensureCacheIsOk" start="662" end="670" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="temporary check how often current cache fails! 2010-05-07 ms"/>
    </docblock>
  </method>
  <method name="localize" start="678" end="700" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="localize 2010-04-29 ms"/>
    </docblock>
    <parameter name="lang" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="ensureDefaultLanguage" start="706" end="710" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="bug fix for i18n 2010-01-01 ms"/>
    </docblock>
  </method>
  <method name="ensureControllerConsistency" start="716" end="754" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="main controller function for consistency in controller naming 2009-12-19 ms"/>
    </docblock>
    <inline>
      <comment value="problems with plugins" line="717"/>
      <comment value="log problem with controller naming" line="723"/>
      <comment value="underscored version is the only valid one to avoid duplicate content" line="725"/>
      <todo value="add plugin/admin stuff which right now is supposed to work automatically" line="728"/>
      <comment value="pr(Router::url());" line="733"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="pr($this-&gt;currentUrl());" line="734"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="pr($this-&gt;currentUrl(true));" line="735"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="pr($this-&gt;Controller-&gt;here);" line="736"/>
      <comment value="problem with extensions (rss etc)" line="741"/>
      <comment value="pr($this-&gt;Controller-&gt;here);" line="744"/>
      <comment value="pr($currentUrl);" line="745"/>
    </inline>
  </method>
  <method name="ensureConsistency" start="761" end="772" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="main controller function for seo-slugs passed titleSlug != current title =&gt; redirect to the expected one 2009-07-31 ms"/>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="passedTitleSlug" byreference="false" type="{unknown}"/>
    <parameter name="currentTitle" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="case sensitive!!!" line="763"/>
    </inline>
  </method>
  <method name="autoPrefixUrl" start="785" end="787" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="add protocol prefix if necessary (and possible) static? 2010-06-02 ms"/>
    </docblock>
    <parameter name="url" byreference="false" type="{unknown}"/>
    <parameter name="prefix" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="cleanUrl" start="796" end="798" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="remove unnessary stuff + add http:// for external urls TODO: protocol to lower!"/>
      <static value="">2009-12-22 ms</static>
    </docblock>
    <parameter name="url" byreference="false" type="{unknown}"/>
    <parameter name="headerRedirect" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="getHeaderFromUrl" start="804" end="806" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact=""/>
      <static value="">2009-12-26 ms</static>
    </docblock>
    <parameter name="url" byreference="false" type="{unknown}"/>
  </method>
  <method name="getClientIp" start="815" end="817" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="get the current ip address"/>
      <param type="object" variable="$safe">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return description="$ip" type="string">2011-11-02 ms</return>
    </docblock>
    <parameter name="safe" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getReferer" start="825" end="827" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="get the current referer"/>
      <param description="(defaults to false and leaves the url untouched)" type="object" variable="$full">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return description="$referer (local or foreign)" type="string">2011-11-02 ms</return>
    </docblock>
    <parameter name="full" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="logicalAnd" start="835" end="837" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="returns true only if all values are true"/>
      <return description="$result" type="object">maybe move to bootstrap?
2011-11-02 ms<type full="bool" namespace="" name="bool"/></return>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
  </method>
  <method name="logicalOr" start="845" end="847" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="returns true if at least one value is true"/>
      <return description="$result" type="object">maybe move to bootstrap?
2011-11-02 ms<type full="bool" namespace="" name="bool"/></return>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
  </method>
  <method name="typeCast" start="856" end="858" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="convinience function for automatic casting in form methods etc"/>
      <return description="value for DB query, or NULL if type was not a valid one" type="object">
        <type full="safe" namespace="" name="safe"/>
      </return>
      <static value="">maybe move to bootstrap?
2008-12-12 ms</static>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}" default="null"/>
    <parameter name="value" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="getGroup" start="866" end="882" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="try to get group for a multidim array for select boxes"/>
      <param type="array" variable="$array"/>
      <param type="string" variable="$result">2011-03-12 ms</param>
    </docblock>
    <parameter name="multiDimArray" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="matching" byreference="false" type="array"/>
  </method>
  <method name="daysInMonth" start="896" end="900" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="for month and year it returns the amount of days of this month year is necessary due to leap years!"/>
      <param type="int" variable="$year"/>
      <param type="int" variable="$month"/>
      <static value="">TODO: move to TimeLib etc
2009-12-26 ms</static>
    </docblock>
    <parameter name="year" byreference="false" type="{unknown}"/>
    <parameter name="month" byreference="false" type="{unknown}"/>
  </method>
  <method name="trimDeep" start="910" end="913" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <static value="?">move to boostrap?
2009-07-07 ms</static>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="specialcharsDeep" start="920" end="923" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <static value="?">move to boostrap?
2009-07-07 ms</static>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="deep" start="930" end="933" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <static value="?">move to boostrap?
2009-07-07 ms</static>
    </docblock>
    <parameter name="function" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="sanitizeDeep" start="942" end="958" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="MAIN Sanitize Array-FUNCTION"/>
      <param description="html, paranoid" type="string" variable="$type:">move to boostrap?
2008-11-06 ms</param>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="{unknown}" default="null"/>
    <parameter name="options" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="paranoidDeep" start="965" end="969" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="removes all except A-Z,a-z,0-9 and allowedChars (allowedChars array) move to boostrap? 2009-07-07 ms"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="htmlDeep" start="976" end="980" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="transfers/removes all &lt; &gt; from text (remove TRUE/FALSE) move to boostrap? 2009-07-07 ms"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="average" start="993" end="997" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="get the rounded average"/>
      <param description="int or float values" type="array" variable="$values:"/>
      <return description="$average" type="int"/>
      <static value="">move to lib
2009-09-05 ms</static>
    </docblock>
    <parameter name="values" byreference="false" type="{unknown}"/>
    <parameter name="precision" byreference="false" type="integer" default="0"/>
  </method>
  <method name="numberOfWords" start="1007" end="1017" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact=""/>
      <deprecated value=": use TextLib">//TODO use str_word_count() instead!!!</deprecated>
      <return type="int"/>
      <static value="">2009-11-11 ms</static>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="numberOfChars" start="1026" end="1028" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <deprecated value=": use TextLib">//TODO: dont count spaces, otherwise we could use mb_strlen() right away!</deprecated>
      <return type="int"/>
      <static value="">2009-11-11 ms</static>
    </docblock>
    <parameter name="text" byreference="false" type="{unknown}"/>
  </method>
  <method name="parseList" start="1042" end="1070" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="takes list of items and transforms it into an array + cleaning (trim, no empty parts, etc)"/>
      <param description="containing the parts" type="string" variable="$string"/>
      <param description="(defaults to ',')" type="string" variable="$separator"/>
      <param description="(true/false): problems with äöüß etc!" type="boolean" variable="$camelize"/>
      <return description="$results as array list" type="array"/>
      <static value="">//TODO: 3.4. parameter as array, move to Lib
2009-08-13 ms</static>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
    <parameter name="separator" byreference="false" type="{unknown}" default="null"/>
    <parameter name="camelize" byreference="false" type="{unknown}" default="false"/>
    <parameter name="capitalize" byreference="false" type="{unknown}" default="true"/>
    <inline>
      <comment value="parses the list, but leaves tokens untouched inside () brackets" line="1047"/>
      <comment value="explode($separator, $string);" line="1048"/>
    </inline>
  </method>
  <method name="separators" start="1078" end="1095" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="//todo move to lib!!! static 2009-12-21 ms"/>
    </docblock>
    <parameter name="s" byreference="false" type="{unknown}" default="null"/>
    <parameter name="valueOnly" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="alphaFilterSymbols" start="1107" end="1117" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="//TODO: move somewhere else Returns an array with chars up = uppercase, low = lowercase"/>
      <var description="type: NULL/up/down | default: NULL (= down)" type="object">
        <type full="char" namespace="" name="char"/>
      </var>
      <return description="with the a-z" type="array"/>
      <deprecated value=": USE range() instead! move to lib"/>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="gmtOffset" start="1125" end="1131" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="returns the current server GMT offset (+/- 1..12) TODO: move to DateLib etc"/>
      <static value="">2009-12-26 ms</static>
    </docblock>
    <inline>
      <comment value="pr ($gmt); pr ($gmtOffset);" line="1128"/>
    </inline>
  </method>
  <method name="timeStuff" start="1136" end="1146" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="TODO: move to DateLib etc"/>
    </docblock>
  </method>
  <method name="userOffset" start="1153" end="1155" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="TODO: move to DateLib etc"/>
      <static value="">2009-12-26 ms</static>
    </docblock>
    <parameter name="timeOffset" byreference="false" type="{unknown}"/>
  </method>
  <method name="assignToChar" start="1169" end="1221" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="//TODO: move somewhere else Assign Array to Char Array"/>
      <var description="array" type="object">
        <type full="content" namespace="" name="content"/>
      </var>
      <var description="array" type="object">
        <type full="char" namespace="" name="char"/>
      </var>
      <return description="chars with content" type="object">
        <type full="array:" namespace="" name="array:"/>
      </return>
      <static value="">PROTECTED NAMES (content cannot contain those): undefined
2009-12-26 ms</static>
    </docblock>
    <parameter name="content_array" byreference="false" type="{unknown}"/>
    <parameter name="char_array" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="loop them trough" line="1180"/>
      <comment value="throws warnings otherwise" line="1182"/>
      <comment value="no match?" line="1191"/>
      <comment value="this way does not work:" line="1198"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="foreach ($char_array as $char) {" line="1199"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$res[$char]=array();" line="1200"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$done = false;" line="1201"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="foreach ($content_array as $content) {" line="1202"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="if (!empty($content) &amp;&amp; strtolower(substr($content,0,1)) == $char) {" line="1203"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$res[$char][]=$content;" line="1204"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$done = true;" line="1205"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="1206"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="1207"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="no match?" line="1208"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="if (!empty($content) &amp;&amp; !$done) {" line="1209"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="echo $content;" line="1210"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$res['undefined'][]=$content;" line="1211"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="1212"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="1213"/>
    </inline>
  </method>
  <method name="extractEmail" start="1230" end="1242" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <deprecated value="">use splitEmail instead</deprecated>
    </docblock>
    <parameter name="email" byreference="false" type="{unknown}"/>
  </method>
  <method name="splitEmail" start="1250" end="1268" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="expects email to be valid! TODO: move to Lib"/>
      <return description="$email - pattern: array('email'=&gt;,'name'=&gt;)" type="array">2010-04-20 ms</return>
    </docblock>
    <parameter name="email" byreference="false" type="{unknown}"/>
    <parameter name="abortOnError" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="combineEmail" start="1275" end="1283" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="TODO: move to Lib"/>
      <param type="string" variable="$email"/>
      <param description="(optional, will use email otherwise)" type="string" variable="$name"/>
    </docblock>
    <parameter name="email" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="extractEmailInfo" start="1298" end="1339" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="TODO: move to Lib returns type - username: everything till @ (xyz@abc.de =&gt; xyz) - hostname: whole domain (xyz@abc.de =&gt; abc.de) - tld: top level domain only (xyz@abc.de =&gt; de) - domain: if available (xyz@e.abc.de =&gt; abc) - subdomain: if available (xyz@e.abc.de =&gt; e)"/>
      <param description="well formatted email! (containing one @ and one .)" type="string" variable="$email:"/>
      <param description="(TODO: defaults to return all elements)" type="string" variable="$type"/>
      <returns value="string or false on failure">2010-01-10 ms</returns>
    </docblock>
    <parameter name="email" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="$checkpos = strrpos($email, '@');" line="1299"/>
      <todo value="; include 3rd-Level-Label" line="1320"/>
      <comment value="$hostParts = explode();" line="1336"/>
      <comment value="$check = trim(mb_substr($email, $checkpos));" line="1337"/>
    </inline>
  </method>
  <method name="getSearchItem" start="1348" end="1362" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="TODO: move to SearchLib etc Returns searchArray (options['wildcard'] TRUE/FALSE)"/>
      <return description="cleaned array('keyword'=&gt;'searchphrase') or array('keyword LIKE'=&gt;'searchphrase')" type="object">
        <type full="ARRAY" namespace="" name="ARRAY"/>
      </return>
      <access value="public"/>
    </docblock>
    <parameter name="keyword" byreference="false" type="{unknown}" default="null"/>
    <parameter name="searchphrase" byreference="false" type="{unknown}" default="null"/>
    <parameter name="options" byreference="false" type="array"/>
  </method>
  <method name="pwd" start="1375" end="1384" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="returns auto-generated password"/>
      <param description="user, ..." type="string" variable="$type:"/>
      <param description="(if no type is submitted)" type="int" variable="$length"/>
      <return description="on success, empty string otherwise" type="object">
        <type full="pwd" namespace="" name="pwd"/>
      </return>
      <static value=""/>
      <deprecated value="- use RandomLib">2009-12-26 ms</deprecated>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}" default="null"/>
    <parameter name="length" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="containsAtSign" start="1395" end="1400" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="TODO: move to Lib Checks if string contains @ sign"/>
      <return description="if at least one @ is in the string, false otherwise" type="object">
        <type full="true" namespace="" name="true"/>
      </return>
      <static value="">2009-12-26 ms</static>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="slugIp" start="1410" end="1414" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <deprecated value="- use IpLip instead!">IPv4/6 to slugged ip
192.111.111.111 =&gt; 192-111-111-111
4C00:0207:01E6:3152 =&gt; 4C00+0207+01E6+3152</deprecated>
      <return description="sluggedIp" type="string">2010-06-19 ms</return>
    </docblock>
    <parameter name="ip" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="$ip = Inflector::slug($ip);" line="1411"/>
    </inline>
  </method>
  <method name="unslugIp" start="1421" end="1425" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <deprecated value="- use IpLip instead!"/>
      <return description="ip on success, FALSE on failure" type="string">2010-06-19 ms</return>
    </docblock>
    <parameter name="ip" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="$format = self::ipFormat($ip);" line="1422"/>
    </inline>
  </method>
  <method name="ipFormat" start="1431" end="1439" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <deprecated value="- use IpLip instead!"/>
      <return description="v4/v6 or FALSE on failure" type="string"/>
    </docblock>
    <parameter name="ip" byreference="false" type="{unknown}"/>
  </method>
  <method name="responseCodes" start="1448" end="1513" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the Corresponding Message to an HTTP Error Code"/>
      <param description="100...505" type="int" variable="$code:"/>
      <return description="$codes if code is NULL, otherwise string $code (empty string on failure)" type="array">2009-07-21 ms</return>
    </docblock>
    <parameter name="code" byreference="false" type="{unknown}" default="null"/>
    <parameter name="autoTranslate" byreference="false" type="{unknown}" default="false"/>
    <inline>
      <todo value="use core ones Controller::httpCodes" line="1449"/>
      <comment value="RFC 2616 states that all unknown HTTP codes must be treated the same as the" line="1500"/>
      <comment value="base code in their class." line="1501"/>
    </inline>
  </method>
  <method name="smtpResponseCodes" start="1520" end="1536" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the Corresponding Message to an HTTP Error Code"/>
      <param description="4xx...5xx" type="int" variable="$code:">2010-06-08 ms</param>
    </docblock>
    <parameter name="code" byreference="false" type="{unknown}" default="null"/>
    <parameter name="autoTranslate" byreference="false" type="{unknown}" default="false"/>
    <inline>
      <comment value="550 5.1.1 User is unknown" line="1521"/>
      <comment value="552 5.2.2 Storage Exceeded" line="1522"/>
    </inline>
  </method>
  <method name="sortArray" start="1544" end="1555" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="isnt this covered by core Set stuff anyway?)">tryout: sorting multidim. array by field [0]..[x]; z.b. $array['Model']['name'] DESC etc.</description>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="obj" byreference="false" type="{unknown}"/>
    <parameter name="direction" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="sortUp" start="1557" end="1564" abstract="false" final="false" static="false" visibility="public">
    <parameter name="x" byreference="false" type="{unknown}"/>
    <parameter name="y" byreference="false" type="{unknown}"/>
  </method>
  <method name="sortDown" start="1566" end="1573" abstract="false" final="false" static="false" visibility="public">
    <parameter name="x" byreference="false" type="{unknown}"/>
    <parameter name="y" byreference="false" type="{unknown}"/>
  </method>
<enrichments><enrichment type="build"><date unix="1397048043" date="09-04-2014" time="12:54:03" iso="2014-04-09T12:54:03+00:00" rfc="Wed, 09 Apr 2014 12:54:03 +0000"/><phpdox xmlns="http://xml.phpdox.net/src#" version="0.6.5" info="phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" generated="Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" phar="yes"><enricher type="build"/><enricher type="git"/><enricher type="checkstyle"/><enricher type="pmd"/><enricher type="phploc"/></phpdox><php xmlns="http://xml.phpdox.net/src#" version="5.3.10-1ubuntu3.11" os="Linux"><extension name="Core"/><extension name="date"/><extension name="ereg"/><extension name="libxml"/><extension name="openssl"/><extension name="pcre"/><extension name="zlib"/><extension name="bcmath"/><extension name="bz2"/><extension name="calendar"/><extension name="ctype"/><extension name="dba"/><extension name="dom"/><extension name="hash"/><extension name="fileinfo"/><extension name="filter"/><extension name="ftp"/><extension name="gettext"/><extension name="SPL"/><extension name="iconv"/><extension name="json"/><extension name="mbstring"/><extension name="pcntl"/><extension name="session"/><extension name="posix"/><extension name="readline"/><extension name="Reflection"/><extension name="standard"/><extension name="shmop"/><extension name="SimpleXML"/><extension name="soap"/><extension name="sockets"/><extension name="Phar"/><extension name="exif"/><extension name="sysvmsg"/><extension name="sysvsem"/><extension name="sysvshm"/><extension name="tokenizer"/><extension name="wddx"/><extension name="xml"/><extension name="xmlreader"/><extension name="xmlwriter"/><extension name="zip"/><extension name="PDO"/><extension name="xsl"/><extension name="mhash"/></php></enrichment><enrichment type="git"><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="f16525be325aa16218dfea4fe983ccf2a60b79b9"><author email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><commiter email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><message>wijzigingen na het aanmaken van een nieuw phpstrom project</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="287b8750eddef6446e689ccd35cee74b32cde2ed"><author email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><commiter email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><message>rechten zijn gewijzigd</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="58d361958cff9f7a6a85bed1ef717e1029d99d24"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:53:28+00:00" unixtime="1372262008"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:55:26+00:00" unixtime="1372262126"/><message>phpstorm connect?</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="ab510a8ba8b3726396604720ff22cc62d62cda63"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><message>hele hoop opgelost, ik had het eerder moeten committen :$</message></commit></enrichment></enrichments></class>
