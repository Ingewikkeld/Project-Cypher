<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="TinyAuthorize" namespace="" name="TinyAuthorize" abstract="false" final="false" start="35" end="216">
  <file path="app/Plugin/Tools/Controller/Component/Auth" file="TinyAuthorize.php" realpath="/home/vagrant/socsoc/app/Plugin/Tools/Controller/Component/Auth/TinyAuthorize.php" size="7039" time="2014-04-09T08:38:48+00:00" unixtime="1397032728" sha1="b41e14d4ef70ab0fdd0c1ba32194f2324f780395"/>
  <docblock>
    <description compact="Probably the most simple and fastest Acl out there.">Only one config file `acl.ini` necessary
Doesn't even need a Role Model / roles table
Uses most persistent _cake_core_ cache by default</description>
    <link value="http://www.dereuromark.de/2011/12/18/tinyauth-the-fastest-and-easiest-authorization-for-cake2">Usage:
Include it in your beforeFilter() method of the AppController
$this-&gt;Auth-&gt;authorize = array('Tools.Tiny');

Or with admin prefix protection only
$this-&gt;Auth-&gt;authorize = array('Tools.Tiny'=&gt;array('allowUser'=&gt;true));</link>
    <version value="1.2 - now allows other parent model relations besides Role/role_id"/>
    <author value="Mark Scherer"/>
    <cakephp value="2.0"/>
    <license name="MIT">2012-01-09 ms</license>
  </docblock>
  <extends full="BaseAuthorize" namespace="" name="BaseAuthorize"/>
  <member name="_matchArray" type="array" visibility="protected" line="37"/>
  <member name="_defaults" type="array" visibility="protected" line="39"/>
  <constructor name="__construct" start="49" end="57" abstract="false" final="false" static="false" visibility="public">
    <parameter name="Collection" byreference="false" type="object">
      <type full="\\ComponentCollection" namespace="\" name="ComponentCollection"/>
    </parameter>
    <parameter name="settings" byreference="false" type="array"/>
  </constructor>
  <method name="authorize" start="71" end="86" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Authorize a user using the AclComponent.">allows single or multi role based authorization

Examples:
- User HABTM Roles (Role array in User array)
- User belongsTo Roles (role_id in User array)</description>
      <param description="The user to authorize" type="array" variable="$user"/>
      <param description="The request needing authorization." type="object" variable="$request">
        <type full="CakeRequest" namespace="" name="CakeRequest"/>
      </param>
      <return type="boolean"/>
    </docblock>
    <parameter name="user" byreference="false" type="{unknown}"/>
    <parameter name="request" byreference="false" type="object">
      <type full="\\CakeRequest" namespace="\" name="CakeRequest"/>
    </parameter>
  </method>
  <method name="validate" start="93" end="134" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="validate the url to the role(s) allows single or multi role based authorization"/>
      <return description="$success" type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="roles" byreference="false" type="{unknown}"/>
    <parameter name="plugin" byreference="false" type="{unknown}"/>
    <parameter name="controller" byreference="false" type="{unknown}"/>
    <parameter name="action" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="all user actions are accessable for logged in users" line="99"/>
      <comment value="direct access? (even if he has no roles = GUEST)" line="120"/>
      <comment value="normal access (rolebased)" line="125"/>
    </inline>
  </method>
  <method name="getModel" start="139" end="141" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <return description="$User: the User model" type="object"/>
    </docblock>
  </method>
  <method name="_getRoles" start="151" end="214" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="parse ini file and returns the allowed roles per action - uses cache for maximum performance improved speed by several actions before caching: - resolves role slugs to their primary key / identifier - resolves wildcards to their verbose translation"/>
      <return description="$roles" type="array"/>
    </docblock>
  </method>
<enrichments><enrichment type="build"><date unix="1397048043" date="09-04-2014" time="12:54:03" iso="2014-04-09T12:54:03+00:00" rfc="Wed, 09 Apr 2014 12:54:03 +0000"/><phpdox xmlns="http://xml.phpdox.net/src#" version="0.6.5" info="phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" generated="Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" phar="yes"><enricher type="build"/><enricher type="git"/><enricher type="checkstyle"/><enricher type="pmd"/><enricher type="phploc"/></phpdox><php xmlns="http://xml.phpdox.net/src#" version="5.3.10-1ubuntu3.11" os="Linux"><extension name="Core"/><extension name="date"/><extension name="ereg"/><extension name="libxml"/><extension name="openssl"/><extension name="pcre"/><extension name="zlib"/><extension name="bcmath"/><extension name="bz2"/><extension name="calendar"/><extension name="ctype"/><extension name="dba"/><extension name="dom"/><extension name="hash"/><extension name="fileinfo"/><extension name="filter"/><extension name="ftp"/><extension name="gettext"/><extension name="SPL"/><extension name="iconv"/><extension name="json"/><extension name="mbstring"/><extension name="pcntl"/><extension name="session"/><extension name="posix"/><extension name="readline"/><extension name="Reflection"/><extension name="standard"/><extension name="shmop"/><extension name="SimpleXML"/><extension name="soap"/><extension name="sockets"/><extension name="Phar"/><extension name="exif"/><extension name="sysvmsg"/><extension name="sysvsem"/><extension name="sysvshm"/><extension name="tokenizer"/><extension name="wddx"/><extension name="xml"/><extension name="xmlreader"/><extension name="xmlwriter"/><extension name="zip"/><extension name="PDO"/><extension name="xsl"/><extension name="mhash"/></php></enrichment><enrichment type="git"><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="f16525be325aa16218dfea4fe983ccf2a60b79b9"><author email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><commiter email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><message>wijzigingen na het aanmaken van een nieuw phpstrom project</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="287b8750eddef6446e689ccd35cee74b32cde2ed"><author email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><commiter email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><message>rechten zijn gewijzigd</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="58d361958cff9f7a6a85bed1ef717e1029d99d24"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:53:28+00:00" unixtime="1372262008"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:55:26+00:00" unixtime="1372262126"/><message>phpstorm connect?</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="ab510a8ba8b3726396604720ff22cc62d62cda63"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><message>hele hoop opgelost, ik had het eerder moeten committen :$</message></commit></enrichment></enrichments></class>
