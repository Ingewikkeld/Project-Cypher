<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="AutoLoginComponent" namespace="" name="AutoLoginComponent" abstract="false" final="false" start="18" end="327">
  <file path="app/Plugin/Tools/Controller/Component" file="AutoLoginComponent.php" realpath="/home/vagrant/socsoc/app/Plugin/Tools/Controller/Component/AutoLoginComponent.php" size="9108" time="2014-04-09T08:38:48+00:00" unixtime="1397032728" sha1="020c2709e5e6788fafdce2089f8a3472f8b671ad"/>
  <docblock>
    <description compact="AutoLoginComponent">A CakePHP Component that will automatically login the Auth session for a duration if the user requested to (saves data to cookies).</description>
    <author value="Miles Johnson - http://milesj.me"/>
    <copyright value="Copyright 2006-2011, Miles Johnson, Inc."/>
    <license name="http://opensource.org/licenses/mit-license.php - Licensed under The MIT License"/>
    <link value="http://milesj.me/code/cakephp/auto-login"/>
    <modified value="Mark Scherer - 2012-01-08 ms">- now works with Controller::beforeFilter() modifications to allow username/email login switch
- can be disabled dynamically and will skip on CakeError view</modified>
  </docblock>
  <extends full="Component" namespace="" name="Component"/>
  <member name="version" type="string" default="'3.5'" visibility="public" line="26">
    <docblock>
      <description compact="Current version."/>
      <access value="public"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="components" type="array" visibility="public" line="34">
    <docblock>
      <description compact="Components."/>
      <access value="public"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="settings" type="array" visibility="public" line="42">
    <docblock>
      <description compact="Settings."/>
      <access value="public"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_defaults" type="array" visibility="protected" line="50">
    <docblock>
      <description compact="Default settings."/>
      <access value="protected"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_isValidRequest" type="{unknown}" default="false" visibility="protected" line="72">
    <docblock>
      <description compact="Determines whether to trigger startup() logic."/>
      <access value="protected"/>
      <var type="boolean"/>
    </docblock>
  </member>
  <constructor name="__construct" start="80" end="88" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Initialize settings and debug."/>
      <param type="object" variable="$collection">
        <type full="ComponentCollection" namespace="" name="ComponentCollection"/>
      </param>
      <param type="array" variable="$settings"/>
    </docblock>
    <parameter name="collection" byreference="false" type="object">
      <type full="\\ComponentCollection" namespace="\" name="ComponentCollection"/>
    </parameter>
    <parameter name="settings" byreference="false" type="array"/>
    <inline>
      <comment value="make sure an upgrade does reset all cookies stored to avoid conflicts" line="84"/>
    </inline>
  </constructor>
  <method name="initialize" start="98" end="128" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Detect debug info."/>
      <access value="public"/>
      <param type="object" variable="$controller">
        <type full="Controller" namespace="" name="Controller"/>
      </param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="controller" byreference="false" type="object">
      <type full="\\Controller" namespace="\" name="Controller"/>
    </parameter>
    <inline>
      <comment value="Validate the cookie" line="103"/>
      <comment value="Is debug enabled" line="111"/>
      <comment value="Set the data to identify with" line="122"/>
      <comment value="Request is valid, stop startup()" line="126"/>
    </inline>
  </method>
  <method name="startup" start="137" end="163" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Automatically login existent Auth session; called after controllers beforeFilter() so that Auth is initialized."/>
      <access value="public"/>
      <param type="object" variable="$controller">
        <type full="Controller" namespace="" name="Controller"/>
      </param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="controller" byreference="false" type="object">
      <type full="\\Controller" namespace="\" name="Controller"/>
    </parameter>
  </method>
  <method name="beforeRedirect" start="173" end="224" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Automatically process logic when hitting login/logout actions."/>
      <access value="public"/>
      <uses value="Inflector"/>
      <param type="object" variable="$controller">
        <type full="Controller" namespace="" name="Controller"/>
      </param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="controller" byreference="false" type="object">
      <type full="\\Controller" namespace="\" name="Controller"/>
    </parameter>
    <parameter name="url" byreference="false" type="{unknown}"/>
    <parameter name="status" byreference="false" type="{unknown}" default="null"/>
    <parameter name="exit" byreference="false" type="{unknown}" default="true"/>
    <inline>
      <comment value="Is called after user login/logout validates, but before auth redirects" line="197"/>
    </inline>
  </method>
  <method name="delete" start="232" end="234" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Delete the cookie."/>
      <access value="public"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="debug" start="245" end="282" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Debug the current auth and cookies."/>
      <access value="public"/>
      <param type="string" variable="$key"/>
      <param type="array" variable="$cookie"/>
      <param type="array" variable="$user"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="cookie" byreference="false" type="array"/>
    <parameter name="user" byreference="false" type="array"/>
  </method>
  <method name="_writeCookie" start="291" end="306" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Remember the user information and store it in a cookie (encrypted)."/>
      <param type="string" variable="$username"/>
      <param type="string" variable="$password"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="username" byreference="false" type="{unknown}"/>
    <parameter name="password" byreference="false" type="{unknown}"/>
  </method>
  <method name="_readCookie" start="313" end="325" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Read cookie and decode it"/>
      <return description="array $cookieData or false on failure" type="mixed"/>
    </docblock>
  </method>
<enrichments><enrichment type="build"><date unix="1397048043" date="09-04-2014" time="12:54:03" iso="2014-04-09T12:54:03+00:00" rfc="Wed, 09 Apr 2014 12:54:03 +0000"/><phpdox xmlns="http://xml.phpdox.net/src#" version="0.6.5" info="phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" generated="Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" phar="yes"><enricher type="build"/><enricher type="git"/><enricher type="checkstyle"/><enricher type="pmd"/><enricher type="phploc"/></phpdox><php xmlns="http://xml.phpdox.net/src#" version="5.3.10-1ubuntu3.11" os="Linux"><extension name="Core"/><extension name="date"/><extension name="ereg"/><extension name="libxml"/><extension name="openssl"/><extension name="pcre"/><extension name="zlib"/><extension name="bcmath"/><extension name="bz2"/><extension name="calendar"/><extension name="ctype"/><extension name="dba"/><extension name="dom"/><extension name="hash"/><extension name="fileinfo"/><extension name="filter"/><extension name="ftp"/><extension name="gettext"/><extension name="SPL"/><extension name="iconv"/><extension name="json"/><extension name="mbstring"/><extension name="pcntl"/><extension name="session"/><extension name="posix"/><extension name="readline"/><extension name="Reflection"/><extension name="standard"/><extension name="shmop"/><extension name="SimpleXML"/><extension name="soap"/><extension name="sockets"/><extension name="Phar"/><extension name="exif"/><extension name="sysvmsg"/><extension name="sysvsem"/><extension name="sysvshm"/><extension name="tokenizer"/><extension name="wddx"/><extension name="xml"/><extension name="xmlreader"/><extension name="xmlwriter"/><extension name="zip"/><extension name="PDO"/><extension name="xsl"/><extension name="mhash"/></php></enrichment><enrichment type="git"><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="f16525be325aa16218dfea4fe983ccf2a60b79b9"><author email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><commiter email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><message>wijzigingen na het aanmaken van een nieuw phpstrom project</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="287b8750eddef6446e689ccd35cee74b32cde2ed"><author email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><commiter email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><message>rechten zijn gewijzigd</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="58d361958cff9f7a6a85bed1ef717e1029d99d24"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:53:28+00:00" unixtime="1372262008"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:55:26+00:00" unixtime="1372262126"/><message>phpstorm connect?</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="ab510a8ba8b3726396604720ff22cc62d62cda63"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><message>hele hoop opgelost, ik had het eerder moeten committen :$</message></commit></enrichment></enrichments></class>
