<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="Pheanstalk_Response_ArrayResponse" namespace="" name="Pheanstalk_Response_ArrayResponse" abstract="false" final="false" start="10" end="63">
  <file path="app/Plugin/Queue/Lib/pheanstalk/classes/Pheanstalk/Response" file="ArrayResponse.php" realpath="/home/vagrant/socsoc/app/Plugin/Queue/Lib/pheanstalk/classes/Pheanstalk/Response/ArrayResponse.php" size="1409" time="2014-04-09T08:38:48+00:00" unixtime="1397032728" sha1="6b26740d50626766a6624668f2db3f0078d34278"/>
  <docblock>
    <description compact="A response with an ArrayObject interface to key=&gt;value data"/>
    <author value="Paul Annesley"/>
    <package value="Pheanstalk"/>
    <licence value="http://www.opensource.org/licenses/mit-license.php"/>
  </docblock>
  <extends full="ArrayObject" namespace="" name="ArrayObject"/>
  <implements full="Pheanstalk_Response" namespace="" name="Pheanstalk_Response"/>
  <member name="_name" type="{unknown}" visibility="private" line="14"/>
  <constructor name="__construct" start="20" end="24" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <param type="string" variable="$name"/>
      <param type="array" variable="$data"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="data" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="getResponseName" start="29" end="32" abstract="false" final="false" static="false" visibility="public"/>
  <method name="__get" start="37" end="41" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Object property access to ArrayObject data."/>
    </docblock>
    <parameter name="property" byreference="false" type="{unknown}"/>
  </method>
  <method name="__isset" start="46" end="50" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Object property access to ArrayObject data."/>
    </docblock>
    <parameter name="property" byreference="false" type="{unknown}"/>
  </method>
  <method name="_transformPropertyName" start="59" end="62" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Tranform underscored property name to hyphenated array key."/>
      <param type="string"/>
      <return type="string"/>
    </docblock>
    <parameter name="propertyName" byreference="false" type="{unknown}"/>
  </method>
  <parent full="ArrayObject" namepsace="" name="ArrayObject">
    <constant name="" value="1">
    <docblock>
      <var type="integer"/>
    </docblock>
  </constant>
    <constant name="" value="2">
    <docblock>
      <var type="integer"/>
    </docblock>
  </constant>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct a new array object"/>
      <return type="void"/>
    </docblock>
    <parameter name="input" optional="true" byreference="false" type="object" class="mixed"/>
    <parameter name="flags" optional="true" byreference="false" type="int"/>
    <parameter name="iterator_class" optional="true" byreference="false" type="string"/>
  </constructor>
    <method name="append" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Appends the value">Appends a new value as the last element.</description>
      <return type="void"/>
    </docblock>
    <parameter name="value" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="asort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort the entries by value"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the number of public properties in the ArrayObject"/>
      <return type="int"/>
    </docblock>
  </method>
    <method name="exchangeArray" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Exchange the array for another one."/>
      <return type="array"/>
    </docblock>
    <parameter name="input" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="getArrayCopy" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Creates a copy of the ArrayObject."/>
      <return type="array"/>
    </docblock>
  </method>
    <method name="getFlags" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets the behavior flags."/>
      <return type="int"/>
    </docblock>
  </method>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Create a new iterator from an ArrayObject instance"/>
      <return type="ArrayIterator"/>
    </docblock>
  </method>
    <method name="getIteratorClass" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets the iterator classname for the ArrayObject."/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="ksort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort the entries by key"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="natcasesort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort an array using a case insensitive &quot;natural order&quot; algorithm">This method is a case insensitive version of ArrayObject::natsort.</description>
      <return type="void"/>
    </docblock>
  </method>
    <method name="natsort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort entries using a &quot;natural order&quot; algorithm"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="offsetExists" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns whether the requested index exists"/>
      <return type="bool"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetGet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the value at the specified index"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetSet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets the value at the specified index to newval"/>
      <return type="void"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
    <parameter name="newval" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetUnset" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Unsets the value at the specified index"/>
      <return type="void"/>
    </docblock>
    <parameter name="index" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="serialize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Serialize an ArrayObject"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="setFlags" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets the behavior flags."/>
      <return type="void"/>
    </docblock>
    <parameter name="flags" optional="false" byreference="false" type="int"/>
  </method>
    <method name="setIteratorClass" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sets the iterator classname for the ArrayObject."/>
      <return type="void"/>
    </docblock>
    <parameter name="iterator_class" optional="false" byreference="false" type="string"/>
  </method>
    <method name="uasort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort the entries with a user-defined comparison function and maintain key association">This function sorts the entries such that keys maintain their correlation with the entry that they are associated with, using a user-defined comparison function.</description>
      <return type="void"/>
    </docblock>
    <parameter name="cmp_function" optional="false" byreference="false" type="object" class="callable"/>
  </method>
    <method name="uksort" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Sort the entries by keys using a user-defined comparison function"/>
      <return type="void"/>
    </docblock>
    <parameter name="cmp_function" optional="false" byreference="false" type="object" class="callable"/>
  </method>
    <method name="unserialize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Unserialize an ArrayObject"/>
      <return type="void"/>
    </docblock>
    <parameter name="serialized" optional="false" byreference="false" type="string"/>
  </method>
  </parent>
  <interface full="IteratorAggregate" namepsace="" name="IteratorAggregate">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve an external iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
  </interface>
  <interface full="Pheanstalk_Response" namepsace="" name="Pheanstalk_Response">
    <constant name="RESPONSE_OUT_OF_MEMORY" value="'OUT_OF_MEMORY'"/>
    <constant name="RESPONSE_INTERNAL_ERROR" value="'INTERNAL_ERROR'"/>
    <constant name="RESPONSE_DRAINING" value="'DRAINING'"/>
    <constant name="RESPONSE_BAD_FORMAT" value="'BAD_FORMAT'"/>
    <constant name="RESPONSE_UNKNOWN_COMMAND" value="'UNKNOWN_COMMAND'"/>
    <constant name="RESPONSE_INSERTED" value="'INSERTED'"/>
    <constant name="RESPONSE_BURIED" value="'BURIED'"/>
    <constant name="RESPONSE_EXPECTED_CRLF" value="'EXPECTED_CRLF'"/>
    <constant name="RESPONSE_JOB_TOO_BIG" value="'JOB_TOO_BIG'"/>
    <constant name="RESPONSE_USING" value="'USING'"/>
    <constant name="RESPONSE_DEADLINE_SOON" value="'DEADLINE_SOON'"/>
    <constant name="RESPONSE_RESERVED" value="'RESERVED'"/>
    <constant name="RESPONSE_DELETED" value="'DELETED'"/>
    <constant name="RESPONSE_NOT_FOUND" value="'NOT_FOUND'"/>
    <constant name="RESPONSE_RELEASED" value="'RELEASED'"/>
    <constant name="RESPONSE_WATCHING" value="'WATCHING'"/>
    <constant name="RESPONSE_NOT_IGNORED" value="'NOT_IGNORED'"/>
    <constant name="RESPONSE_FOUND" value="'FOUND'"/>
    <constant name="RESPONSE_KICKED" value="'KICKED'"/>
    <constant name="RESPONSE_OK" value="'OK'"/>
    <constant name="RESPONSE_TIMED_OUT" value="'TIMED_OUT'"/>
    <constant name="RESPONSE_TOUCHED" value="'TOUCHED'"/>
    <constant name="RESPONSE_PAUSED" value="'PAUSED'"/>
    <method name="getResponseName" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="The name of the response"/>
        <return type="string"/>
      </docblock>
    </method>
  </interface>
<enrichments><enrichment type="build"><date unix="1397048043" date="09-04-2014" time="12:54:03" iso="2014-04-09T12:54:03+00:00" rfc="Wed, 09 Apr 2014 12:54:03 +0000"/><phpdox xmlns="http://xml.phpdox.net/src#" version="0.6.5" info="phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" generated="Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" phar="yes"><enricher type="build"/><enricher type="git"/><enricher type="checkstyle"/><enricher type="pmd"/><enricher type="phploc"/></phpdox><php xmlns="http://xml.phpdox.net/src#" version="5.3.10-1ubuntu3.11" os="Linux"><extension name="Core"/><extension name="date"/><extension name="ereg"/><extension name="libxml"/><extension name="openssl"/><extension name="pcre"/><extension name="zlib"/><extension name="bcmath"/><extension name="bz2"/><extension name="calendar"/><extension name="ctype"/><extension name="dba"/><extension name="dom"/><extension name="hash"/><extension name="fileinfo"/><extension name="filter"/><extension name="ftp"/><extension name="gettext"/><extension name="SPL"/><extension name="iconv"/><extension name="json"/><extension name="mbstring"/><extension name="pcntl"/><extension name="session"/><extension name="posix"/><extension name="readline"/><extension name="Reflection"/><extension name="standard"/><extension name="shmop"/><extension name="SimpleXML"/><extension name="soap"/><extension name="sockets"/><extension name="Phar"/><extension name="exif"/><extension name="sysvmsg"/><extension name="sysvsem"/><extension name="sysvshm"/><extension name="tokenizer"/><extension name="wddx"/><extension name="xml"/><extension name="xmlreader"/><extension name="xmlwriter"/><extension name="zip"/><extension name="PDO"/><extension name="xsl"/><extension name="mhash"/></php></enrichment><enrichment type="git"><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="f16525be325aa16218dfea4fe983ccf2a60b79b9"><author email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><commiter email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><message>wijzigingen na het aanmaken van een nieuw phpstrom project</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="287b8750eddef6446e689ccd35cee74b32cde2ed"><author email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><commiter email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><message>rechten zijn gewijzigd</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="e77a82de1468025cd32f6eb867ad40d71cc50ab8"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-07-10T14:33:53+00:00" unixtime="1373466833"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-07-10T14:33:53+00:00" unixtime="1373466833"/><message>beanstalkd en pheanstalk toegevoegd (again)</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="512eddb40e59de7b26dc75edad1ed769d234b3e3"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-07-09T18:06:49+00:00" unixtime="1373393209"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-07-09T18:06:49+00:00" unixtime="1373393209"/><message>pheanstalk en beanstalkd toegevoegd</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="58d361958cff9f7a6a85bed1ef717e1029d99d24"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:53:28+00:00" unixtime="1372262008"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:55:26+00:00" unixtime="1372262126"/><message>phpstorm connect?</message></commit></enrichment></enrichments></class>
