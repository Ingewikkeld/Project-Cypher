<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="GoogleMapV3Helper" namespace="" name="GoogleMapV3Helper" abstract="false" final="false" start="32" end="1560">
  <file path="app/Plugin/Tools/View/Helper" file="GoogleMapV3Helper.php" realpath="/home/vagrant/socsoc/app/Plugin/Tools/View/Helper/GoogleMapV3Helper.php" size="52548" time="2014-04-09T08:38:48+00:00" unixtime="1397032728" sha1="b554ae50a7cebfc9b45b954da0184d22e2b533b1"/>
  <docblock>
    <description compact="PHP5 / CakePHP 2.x"/>
    <author value="Mark Scherer"/>
    <link value="http://www.dereuromark.de/2010/12/21/googlemapsv3-cakephp-helper/"/>
    <package value="tools plugin"/>
    <license name="MIT License (http://www.opensource.org/licenses/mit-license.php)">fixed brackets, spacesToTabs, indends, some improvements, supports multiple maps now.
now capable of resetting itself (full or partly) for multiple maps on a single view

CodeAPI: 		http://code.google.com/intl/de-DE/apis/maps/documentation/javascript/basics.html
Icons/Images: 	http://gmapicons.googlepages.com/home

v1.2: Cake2.x
2011-10-12 ms
v1.3: E_STRICT compliant methods (url now mapUrl, link now mapLink)
2012-08-31 ms</license>
  </docblock>
  <extends full="AppHelper" namespace="" name="AppHelper"/>
  <member name="MAP_COUNT" type="integer" default="0" visibility="public" line="34"/>
  <member name="MARKER_COUNT" type="integer" default="0" visibility="public" line="35"/>
  <member name="ICON_COUNT" type="integer" default="0" visibility="public" line="36"/>
  <member name="INFO_WINDOW_COUNT" type="integer" default="0" visibility="public" line="37"/>
  <member name="INFO_CONTENT_COUNT" type="integer" default="0" visibility="public" line="38"/>
  <constant name="API" value="'maps.google.com/maps/api/js?'"/>
  <constant name="STATIC_API" value="'maps.google.com/maps/api/staticmap?'"/>
  <constant name="TYPE_ROADMAP" value="'R'"/>
  <constant name="TYPE_HYBRID" value="'H'"/>
  <constant name="TYPE_SATELLITE" value="'S'"/>
  <constant name="TYPE_TERRAIN" value="'T'"/>
  <member name="types" type="array" visibility="public" line="48"/>
  <member name="helpers" type="array" visibility="public" line="60">
    <docblock>
      <description compact="Cakephp builtin helper"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="markers" type="array" visibility="public" line="67">
    <docblock>
      <description compact="google maker config instance variable"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="infoWindows" type="array" visibility="public" line="69"/>
  <member name="infoContents" type="array" visibility="public" line="71"/>
  <member name="icons" type="array" visibility="public" line="73"/>
  <member name="matching" type="array" visibility="public" line="75"/>
  <member name="map" type="string" default="''" visibility="public" line="78"/>
  <member name="_mapIds" type="array" visibility="protected" line="80"/>
  <member name="_defaultOptions" type="array" visibility="protected" line="86">
    <docblock>
      <description compact="settings of the helper"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_currentOptions" type="array" visibility="protected" line="174"/>
  <member name="_apiIncluded" type="{unknown}" default="false" visibility="protected" line="176"/>
  <member name="_gearsIncluded" type="{unknown}" default="false" visibility="protected" line="177"/>
  <member name="_located" type="{unknown}" default="false" visibility="protected" line="178"/>
  <constructor name="__construct" start="181" end="226" abstract="false" final="false" static="false" visibility="public">
    <parameter name="View" byreference="false" type="{unknown}" default="null"/>
    <parameter name="settings" byreference="false" type="array"/>
    <inline>
      <comment value="read constum config settings" line="184"/>
      <comment value="the following are convience defaults - if not available the map lat/lng/zoom defaults will be used" line="208"/>
      <comment value="$google['localImages'] = IMAGES.'google_map'.DS;" line="220"/>
    </inline>
  </constructor>
  <method name="apiUrl" start="244" end="267" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="JS maps.google API url Like: http://maps.google.com/maps/api/js?sensor=true Adds Key - more variables could be added after it with &quot;&amp;key=value&amp;...&quot; - region"/>
      <param type="object" variable="$sensor">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <param description="(iso2: en, de, ja, ...)" type="string" variable="$language"/>
      <param description="(more key-value-pairs to append)" type="string" variable="$append"/>
      <return description="$fullUrl" type="string">2009-03-09 ms</return>
    </docblock>
    <parameter name="sensor" byreference="false" type="{unknown}" default="false"/>
    <parameter name="api" byreference="false" type="{unknown}" default="null"/>
    <parameter name="language" byreference="false" type="{unknown}" default="null"/>
    <parameter name="append" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="if (!empty($this-&gt;key)) {" line="251"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$url .= '&amp;key='.$this-&gt;key;" line="252"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="253"/>
    </inline>
  </method>
  <method name="gearsUrl" start="270" end="274" abstract="false" final="false" static="false" visibility="public"/>
  <method name="name" start="281" end="283" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <return description="$currentMapObject" type="string">2010-12-18 ms</return>
    </docblock>
  </method>
  <method name="id" start="289" end="291" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <return description="$currentContainerId" type="string">2010-12-18 ms</return>
    </docblock>
  </method>
  <method name="reset" start="300" end="307" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="make it possible to include multiple maps per page resets markers, infoWindows etc"/>
      <param type="object" variable="true=optionsAsWell">
        <type full="full:" namespace="" name="full:"/>
      </param>
      <return type="object">2010-12-18 ms<type full="void" namespace="" name="void"/></return>
    </docblock>
    <parameter name="full" byreference="false" type="{unknown}" default="true"/>
    <inline>
      <comment value="self::$MAP_COUNT" line="301"/>
    </inline>
  </method>
  <method name="setControls" start="320" end="354" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="set the controls of current map"/>
      <param type="array" variable="$controls:">- zoom, scale, overview: TRUE/FALSE

- map: FALSE, small, large
- type: FALSE, normal, menu, hierarchical
TIP: faster/shorter by using only the first character (e.g. "H" for "hierarchical")

2011-03-15 ms</param>
    </docblock>
    <parameter name="options" byreference="false" type="array"/>
    <inline>
      <comment value="if (!empty($options['map'])) {" line="333"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="if ($options['map'] == 'l' || $options['map'] == 'large') {" line="334"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$this-&gt;setMapControl('GLargeMapControl()');" line="335"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="} else {" line="336"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$this-&gt;setMapControl('GSmallMapControl()');" line="337"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="338"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="339"/>
      <comment value="if ($options['type'] == 'm' || $options['type'] == 'menu') {" line="343"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$this-&gt;setMapControl('GMenuMapTypeControl()');" line="344"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="} elseif ($options['type'] == 'h' || $options['type'] == 'hierarchical') {" line="345"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$this-&gt;setMapControl('GHierarchicalMapTypeControl()');" line="346"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="} else {" line="347"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$this-&gt;setMapControl('GMapTypeControl()');" line="348"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="349"/>
    </inline>
  </method>
  <method name="map" start="364" end="432" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="This the initialization point of the script Returns the div container you can echo on the website"/>
      <param description="associative array of settings are passed" type="array" variable="$options"/>
      <return description="$divContainer" type="string">2010-12-20 ms</return>
    </docblock>
    <parameter name="options" byreference="false" type="array"/>
    <inline>
      <comment value="autoinclude js?" line="376"/>
      <comment value="still not very common: http://code.google.com/intl/de-DE/apis/maps/documentation/javascript/basics.html" line="385"/>
      <comment value="rename &quot;map_canvas&quot; to &quot;map_canvas1&quot;, ... if multiple maps on one page" line="404"/>
    </inline>
  </method>
  <method name="_initialLocation" start="435" end="441" abstract="false" final="false" static="false" visibility="public"/>
  <method name="addMarker" start="449" end="560" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <param type="array" variable="$options">- lat, lng, title, content, icon, directions</param>
      <return description="$markerCount or false on failure" type="int">2010-12-18 ms</return>
    </docblock>
    <parameter name="options" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="$marker .= &quot;" line="514"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="size: new google.maps.Size(50,50)" line="515"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="});" line="516"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="google.maps.event.addListener(x&quot;.self::$MARKER_COUNT.&quot;, 'click', function() {" line="517"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="/ &quot;.$this-&gt;name().&quot;.setZoom(7); /" line="518"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="infowindow.setContent(gWindows[&quot;.self::$MARKER_COUNT.&quot;]);" line="519"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="infowindow.setPosition(event.latLng);" line="520"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="infowindow.open(map);" line="521"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="});" line="522"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="&quot;;" line="523"/>
      <comment value="custom matching event?" line="545"/>
      <comment value="$this-&gt;mapMarkers[$id] = ;" line="550"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$function = 'function() { '.$id.'.'.$call.'(&quot;'.$content.'&quot;);}';" line="551"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$function = 'function() { mapMarkers[\''.$id.'\'].'.$call.'(mapWindows[\''.$id.'\']);}';" line="552"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$this-&gt;addListener($id, $function, isset($options['action'])?$options['action']:null);" line="553"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="&quot;gInfoWindows&quot;.self::$MAP_COUNT.&quot;.setContent(gWindowContents1[1]);" line="554"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="&quot;gInfoWindows&quot;.self::$MAP_COUNT.&quot;.open(map1, gMarkers1[1]);" line="555"/>
    </inline>
  </method>
  <method name="_directions" start="570" end="606" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="build directions form (type get) for directions inside infoWindows"/>
      <param type="mixed" variable="$directions">- bool TRUE for autoDirections (using lat/lng)</param>
      <param type="array" variable="$options">- options array of marker for autoDirections etc (optional)
2011-03-22 ms</param>
    </docblock>
    <parameter name="directions" byreference="false" type="{unknown}"/>
    <parameter name="markerOptions" byreference="false" type="array"/>
  </method>
  <method name="addInfoContent" start="609" end="618" abstract="false" final="false" static="false" visibility="public">
    <parameter name="con" byreference="false" type="{unknown}"/>
    <inline>
      <todo value="own count?" line="616"/>
    </inline>
  </method>
  <member name="setIcons" type="array" visibility="public" line="620"/>
  <method name="iconSet" start="636" end="689" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="get a custom icon set"/>
      <param description="green red, purple, ... or some special ones like &quot;home&quot;, ..." type="object">
        <type full="color:" namespace="" name="color:"/>
      </param>
      <param description="A...Z or 0...20/100 (defaults to none)" type="object">
        <type full="char:" namespace="" name="char:"/>
      </param>
      <param description="s m, l (defaults to medium)" type="object">NOTE: for special ones only first parameter counts!<type full="size:" namespace="" name="size:"/></param>
      <return description="array(icon, shadow, shape, ...)" type="object">2011-03-14 ms<type full="array:" namespace="" name="array:"/></return>
    </docblock>
    <parameter name="color" byreference="false" type="{unknown}"/>
    <parameter name="char" byreference="false" type="{unknown}" default="null"/>
    <parameter name="size" byreference="false" type="string" default="'m'"/>
    <inline>
      <comment value="new google.maps.Size(iconData[images[0]].width, iconData[images[0]].height)," line="666"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="new google.maps.Point(0,0)," line="667"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="new google.maps.Point(0, 32)" line="668"/>
      <comment xmlns="http://xml.phpdox.net/src#" value=");" line="670"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="new google.maps.Size(iconData[images[1]].width, iconData[images[1]].height)," line="671"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="new google.maps.Point(0,0)," line="672"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="new google.maps.Point(0, 32)" line="673"/>
      <comment xmlns="http://xml.phpdox.net/src#" value=");" line="675"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="coord: [1, 1, 1, 32, 32, 32, 32, 1]," line="676"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="type: 'poly'" line="677"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="};" line="678"/>
      <comment value="$this-&gt;icons[$ICON_COUNT] = $res;" line="686"/>
      <comment value="$ICON_COUNT++;" line="687"/>
    </inline>
  </method>
  <method name="addIcon" start="701" end="714" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <param description="(http://...)" type="string" variable="$imageUrl"/>
      <param description="(http://...)" type="string" variable="$shadowImageUrl"/>
      <param type="array" variable="$imageOptions"/>
      <param type="array" variable="$shadowImageOptions">custom icon: http://thydzik.com/thydzikGoogleMap/markerlink.php?text=?&amp;color=FFFFFF
custom icons: http://code.google.com/p/google-maps-icons/wiki/NumericIcons#Lettered_Balloons_from_A_to_Z,_in_10_Colors
custom shadows: http://www.cycloloco.com/shadowmaker/shadowmaker.htm
2011-03-13 ms</param>
    </docblock>
    <parameter name="image" byreference="false" type="{unknown}"/>
    <parameter name="shadow" byreference="false" type="{unknown}" default="null"/>
    <parameter name="imageOptions" byreference="false" type="array"/>
    <parameter name="shadowOptions" byreference="false" type="array"/>
  </method>
  <member name="_iconRemember" type="array" visibility="protected" line="716"/>
  <method name="icon" start="726" end="758" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="generate icon object"/>
      <param type="object" variable="(required)">
        <type full="url" namespace="" name="url"/>
      </param>
      <param type="object" variable="(optional):">- size: array(width=&gt;x, height=&gt;y)
- origin: array(width=&gt;x, height=&gt;y)
- anchor: array(width=&gt;x, height=&gt;y)<type full="options" namespace="" name="options"/></param>
    </docblock>
    <parameter name="url" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array"/>
    <inline>
      <comment value="The shadow image is larger in the horizontal dimension" line="727"/>
      <comment value="while the position and offset are the same as for the main image." line="728"/>
      <comment value="pr(returns($options));" line="747"/>
      <comment value="$this-&gt;map .= $code;" line="756"/>
    </inline>
  </method>
  <method name="addInfoWindow" start="767" end="789" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <param type="array" variable="$options">- lat, lng, content, maxWidth, pixelOffset, zIndex</param>
      <return description="$windowCount" type="int">2010-12-18 ms</return>
    </docblock>
    <parameter name="options" byreference="false" type="array"/>
  </method>
  <method name="addEvent" start="797" end="803" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <param type="int" variable="$marker"/>
      <param type="int" variable="$infoWindow"/>
      <return type="object">2010-12-18 ms<type full="void" namespace="" name="void"/></return>
    </docblock>
    <parameter name="marker" byreference="false" type="{unknown}"/>
    <parameter name="infoWindow" byreference="false" type="{unknown}"/>
  </method>
  <method name="addCustomEvent" start="811" end="817" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <param type="int" variable="$marker"/>
      <param description="(js)" type="string" variable="$event"/>
      <return type="object">2010-12-18 ms<type full="void" namespace="" name="void"/></return>
    </docblock>
    <parameter name="marker" byreference="false" type="{unknown}"/>
    <parameter name="event" byreference="false" type="{unknown}"/>
  </method>
  <method name="addCustom" start="824" end="826" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <param description="(js)" type="string" variable="$custom"/>
      <return type="object">2010-12-18 ms<type full="void" namespace="" name="void"/></return>
    </docblock>
    <parameter name="js" byreference="false" type="{unknown}"/>
  </method>
  <method name="setContentInfoWindow" start="834" end="837" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <param description="(html/text)" type="string" variable="$content"/>
      <param type="int" variable="$infoWindowCount"/>
      <return type="object">2010-12-18 ms<type full="void" namespace="" name="void"/></return>
    </docblock>
    <parameter name="con" byreference="false" type="{unknown}"/>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="escapeString" start="846" end="848" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="json encode string"/>
      <param type="mixed" variable="$content"/>
      <return type="object">
        <type full="json" namespace="" name="json"/>
      </return>
    </docblock>
    <parameter name="content" byreference="false" type="{unknown}"/>
  </method>
  <method name="script" start="857" end="883" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="This method returns the javascript for the current map container Just echo it below the map container"/>
      <return type="string">2010-12-18 ms</return>
    </docblock>
  </method>
  <method name="geolocateCallback" start="892" end="898" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="set a custom geolocate callback"/>
      <param type="string" variable="$customJs">false: no callback at all</param>
      <return type="object">2011-03-16 ms<type full="void" namespace="" name="void"/></return>
    </docblock>
    <parameter name="js" byreference="false" type="{unknown}"/>
  </method>
  <method name="_geolocate" start="904" end="942" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="experimental - works in cutting edge browsers like chrome10 2011-03-16 ms"/>
    </docblock>
  </method>
  <method name="_geolocationCallback" start="944" end="954" abstract="false" final="false" static="false" visibility="protected"/>
  <method name="_autoCenter" start="962" end="968" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="auto center map careful: with only one marker this can result in too high zoom values!"/>
      <return description="$autoCenterCommands" type="string">2010-12-17 ms</return>
    </docblock>
  </method>
  <method name="_mapOptions" start="974" end="1011" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact=""/>
      <return description="like js string" type="object">2010-12-17 ms<type full="json" namespace="" name="json"/></return>
    </docblock>
  </method>
  <method name="_controlOptions" start="1017" end="1032" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact=""/>
      <return description="like js string" type="object">2010-12-17 ms<type full="json" namespace="" name="json"/></return>
    </docblock>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="{unknown}"/>
  </method>
  <method name="mapLink" start="1046" end="1048" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns a maps.google link"/>
      <param type="string" variable="$linkTitle"/>
      <param type="array" variable="$mapOptions"/>
      <param type="array" variable="$linkOptions"/>
      <return description="Html link" type="string">2011-03-12 ms</return>
    </docblock>
    <parameter name="title" byreference="false" type="{unknown}"/>
    <parameter name="mapOptions" byreference="false" type="array"/>
    <parameter name="linkOptions" byreference="false" type="array"/>
  </method>
  <method name="mapUrl" start="1060" end="1085" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="returns a maps.google url"/>
      <param type="array" variable="options:">- from: necessary (address or lat,lng)
- to: 1x necessary (address or lat,lng - can be an array of multiple destinations: array('dest1', 'dest2'))
- zoom: optional (defaults to none)</param>
      <return description="link: http://..." type="string">2010-12-18 ms</return>
    </docblock>
    <parameter name="options" byreference="false" type="array"/>
    <inline>
      <comment value="$urlArray[] = 'f=d';" line="1081"/>
      <comment value="$urlArray[] = 'hl=de';" line="1082"/>
      <comment value="$urlArray[] = 'ie=UTF8';" line="1083"/>
    </inline>
  </method>
  <method name="staticMap" start="1112" end="1116" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a plain image map"/>
      <link value="http://code.google.com/intl/de-DE/apis/maps/documentation/staticmaps"/>
      <param type="object">- string $size [necessary: VALxVAL, e.g. 500x400 - max 640x640]
- string $center: x,y or address [necessary, if no markers are given; else tries to take defaults if available] or TRUE/FALSE
- int $zoom [optional; if no markers are given, default value is used; if set to "auto" and ]*
- array $markers [optional, @see staticPaths() method]
- string $type [optional: roadmap/hybrid, ...; default:roadmap]
- string $mobile TRUE/FALSE
- string $visible: $area (x|y|...)
- array $paths [optional, @see staticPaths() method]
- string $language [optional]<type full="options:" namespace="" name="options:"/></param>
      <param description="html attributes for the image" type="array" variable="$attributes:">- title
- alt (defaults to 'Map')
- url (tip: you can pass $this-&gt;link(...) and it will create a link to maps.google.com)</param>
      <return description="$imageTag" type="string">2010-12-18 ms</return>
    </docblock>
    <parameter name="options" byreference="false" type="array"/>
    <parameter name="attributes" byreference="false" type="array"/>
  </method>
  <method name="staticMapLink" start="1126" end="1128" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a link to a plain image map"/>
      <param type="string" variable="$linkTitle"/>
      <param type="array" variable="$mapOptions"/>
      <param type="array" variable="$linkOptions"/>
      <return description="Html link" type="string">2011-03-12 ms</return>
    </docblock>
    <parameter name="title" byreference="false" type="{unknown}"/>
    <parameter name="mapOptions" byreference="false" type="array"/>
    <parameter name="linkOptions" byreference="false" type="array"/>
  </method>
  <method name="staticMapUrl" start="1138" end="1247" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create an url to a plain image map"/>
      <param type="object">- see staticMap() for details<type full="options" namespace="" name="options"/></param>
      <return description="$urlOfImage: http://..." type="string">2010-12-18 ms</return>
    </docblock>
    <parameter name="options" byreference="false" type="array"/>
    <inline>
      <comment value="$params = array(" line="1140"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="'sensor' =&gt; 'false'," line="1141"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="'mobile' =&gt; 'false'," line="1142"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="'format' =&gt; 'png'," line="1143"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="'center' =&gt; false" line="1144"/>
      <comment xmlns="http://xml.phpdox.net/src#" value=");" line="1145"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="if (!empty($options['sensor'])) {" line="1146"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$params['sensor'] = 'true';" line="1147"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="1148"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="if (!empty($options['mobile'])) {" line="1149"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$params['mobile'] = 'true';" line="1150"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="1151"/>
      <comment value="do we want zoom to auto-correct itself?" line="1170"/>
      <comment value="a position on the map that is supposed to stay visible at all cost" line="1175"/>
      <comment value="center and zoom are not necccessary if path, visible or markers are given" line="1180"/>
      <comment value="else {" line="1187"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="try to read from markers array???" line="1188"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="if (isset($options['markers']) &amp;&amp; count($options['markers']) == 1) {" line="1189"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="pr ($options['markers']);" line="1190"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="1191"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="}" line="1192"/>
      <comment value="unset($options['type']);" line="1213"/>
      <comment value="old: {latitude},{longitude},{color}{alpha-character}" line="1217"/>
      <comment value="new: @see staticMarkers()" line="1218"/>
      <comment value="valXval" line="1227"/>
    </inline>
  </method>
  <method name="staticPaths" start="1258" end="1296" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="prepare paths for staticMap"/>
      <param type="array" variable="$pathElementArrays">- elements: [required] (multiple array(lat=&gt;x, lng=&gt;y) or just a address strings)
- color: red/blue/green (optional, default blue)
- weight: numeric (optional, default: 5)</param>
      <return description="$paths: e.g: color:0x0000FF80|weight:5|37.40303,-122.08334|37.39471,-122.07201|37.40589,-122.06171{|...}" type="string">2010-12-18 ms</return>
    </docblock>
    <parameter name="pos" byreference="false" type="array"/>
    <inline>
      <comment value="not a 2-level array? make it one" line="1265"/>
      <comment value="prepare color" line="1277"/>
      <comment value="lat/lng?" line="1288"/>
    </inline>
  </method>
  <method name="staticMarkers" start="1319" end="1384" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="prepare markers for staticMap"/>
      <param type="array" variable="$markerArrays">- lat: xx.xxxxxx (necessary)
- lng: xx.xxxxxx (necessary)
- address: (instead of lat/lng)
- color: red/blue/green (optional, default blue)
- label: a-z or numbers (optional, default: s)
- icon: custom icon (png, gif, jpg - max 64x64 - max 5 different icons per image)
- shadow: TRUE/FALSE</param>
      <param description="(global) (overridden by custom marker styles)" type="object">- color
- label
- icon
- shadow<type full="style" namespace="" name="style"/></param>
      <return description="$markers: color:green|label:Z|48,11|Berlin" type="array">NEW: size:mid|color:red|label:E|37.400465,-122.073003|37.437328,-122.159928&amp;markers=size:small|color:blue|37.369110,-122.096034
OLD: 40.702147,-74.015794,blueS|40.711614,-74.012318,greenG{|...}
2010-12-18 ms</return>
    </docblock>
    <parameter name="pos" byreference="false" type="array"/>
    <parameter name="style" byreference="false" type="array"/>
    <inline>
      <comment value="not a 2-level array? make it one" line="1331"/>
      <comment value="new in statitV2: separate styles! right now just merged" line="1336"/>
      <comment value="adress or lat/lng?" line="1341"/>
      <comment value="prepare color" line="1352"/>
      <comment value="label? A-Z0-9" line="1357"/>
      <todo value="icons" line="1372"/>
      <todo value="shortcut? only possible if no custom params!" line="1376"/>
      <comment value="long: markers=styles1|address1&amp;markers=styles2|address2&amp;..." line="1380"/>
      <comment value="short: markers=styles,address1|address2|address3|..." line="1381"/>
    </inline>
  </method>
  <method name="_protocol" start="1391" end="1396" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Ensure that we stay on the appropriate protocol"/>
      <return description="protocol base (including ://)" type="string"/>
    </docblock>
  </method>
  <method name="_prepColor" start="1405" end="1412" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="# to 0x or # added"/>
      <param description="FFFFFF, #FFFFFF, 0xFFFFFF or blue" type="string" variable="$color:"/>
      <return description="$color" type="string">2010-12-20 ms</return>
    </docblock>
    <parameter name="color" byreference="false" type="{unknown}"/>
  </method>
  <method name="geocoder" start="1441" end="1445" abstract="false" final="false" static="false" visibility="public"/>
  <method name="setManager" start="1455" end="1459" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="managing lots of markers!"/>
      <link value="http://google-maps-utility-library-v3.googlecode.com/svn/tags/markermanager/1.0/docs/examples.html"/>
      <param type="object">-<type full="options" namespace="" name="options"/></param>
      <return type="object">2010-12-18 ms<type full="void" namespace="" name="void"/></return>
    </docblock>
  </method>
  <method name="addManagerMarker" start="1461" end="1463" abstract="false" final="false" static="false" visibility="public">
    <parameter name="marker" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="{unknown}"/>
  </method>
  <method name="setCluster" start="1474" end="1484" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="clustering for lots of markers!"/>
      <link value="?"/>
      <param type="object">-
based on Fluster2 0.1.1<type full="options" namespace="" name="options"/></param>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="options" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="styles" line="1480"/>
    </inline>
  </method>
  <method name="addClusterMarker" start="1486" end="1488" abstract="false" final="false" static="false" visibility="public">
    <parameter name="marker" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="{unknown}"/>
  </method>
  <method name="initCluster" start="1490" end="1492" abstract="false" final="false" static="false" visibility="public"/>
  <member name="flusterScript" type="string" default="'&#10;function Fluster2(_map,_debug) {var map=_map;var projection=new Fluster2ProjectionOverlay(map);var me=this;var clusters=new Object();var markersLeft=new Object();this.debugEnabled=_debug;this.gridSize=60;this.markers=new Array();this.currentZoomLevel=-1;this.styles={0:{image:\'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m1.png\',textColor:\'#FFFFFF\',width:53,height:52},10:{image:\'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m2.png\',textColor:\'#FFFFFF\',width:56,height:55},20:{image:\'http://gmaps-utility-library.googlecode.com/svn/trunk/markerclusterer/1.0/images/m3.png\',textColor:\'#FFFFFF\',width:66,height:65}};var zoomChangedTimeout=null;function createClusters() {var zoom=map.getZoom();if (clusters[zoom]) {me.debug(\'Clusters for zoom level \'+zoom+\' already initialized.\')} else {var clustersThisZoomLevel=new Array();var clusterCount=0;var markerCount=me.markers.length;for (var i=0;i&lt;markerCount;i++) {var marker=me.markers[i];var markerPosition=marker.getPosition();var done=false;for (var j=clusterCount-1;j&gt;=0;j--) {var cluster=clustersThisZoomLevel[j];if (cluster.contains(markerPosition)) {cluster.addMarker(marker);done=true;break}}if (!done) {var cluster=new Fluster2Cluster(me,marker);clustersThisZoomLevel.push(cluster);clusterCount++}}clusters[zoom]=clustersThisZoomLevel;me.debug(\'Initialized \'+clusters[zoom].length+\' clusters for zoom level \'+zoom+\'.\')}if (clusters[me.currentZoomLevel]) {for (var i=0;i&lt;clusters[me.currentZoomLevel].length;i++) {clusters[me.currentZoomLevel][i].hide()}}me.currentZoomLevel=zoom;showClustersInBounds()}function showClustersInBounds() {var mapBounds=map.getBounds();for (var i=0;i&lt;clusters[me.currentZoomLevel].length;i++) {var cluster=clusters[me.currentZoomLevel][i];if (mapBounds.contains(cluster.getPosition())) {cluster.show()}}}this.zoomChanged=function() {window.clearInterval(zoomChangedTimeout);zoomChangedTimeout=window.setTimeout(createClusters,500)};this.getMap=function() {return map};this.getProjection=function() {return projection.getP()};this.debug=function(message) {if (me.debugEnabled) {console.log(\'Fluster2: \'+message)}};this.addMarker=function(_marker) {me.markers.push(_marker)};this.getStyles=function() {return me.styles};this.initialize=function() {google.maps.event.addListener(map,\'zoom_changed\',this.zoomChanged);google.maps.event.addListener(map,\'dragend\',showClustersInBounds);window.setTimeout(createClusters,1000)}}&#10;function Fluster2Cluster(_fluster,_marker) {var markerPosition=_marker.getPosition();this.fluster=_fluster;this.markers=[];this.bounds=null;this.marker=null;this.lngSum=0;this.latSum=0;this.center=markerPosition;this.map=this.fluster.getMap();var me=this;var projection=_fluster.getProjection();var gridSize=_fluster.gridSize;var position=projection.fromLatLngToDivPixel(markerPosition);var positionSW=new google.maps.Point(position.x-gridSize,position.y+gridSize);var positionNE=new google.maps.Point(position.x+gridSize,position.y-gridSize);this.bounds=new google.maps.LatLngBounds(projection.fromDivPixelToLatLng(positionSW),projection.fromDivPixelToLatLng(positionNE));this.addMarker=function(_marker) {this.markers.push(_marker)};this.show=function() {if (this.markers.length==1) {this.markers[0].setMap(me.map)}else if (this.markers.length&gt;1) {for (var i=0;i&lt;this.markers.length;i++) {this.markers[i].setMap(null)}if (this.marker==null) {this.marker=new Fluster2ClusterMarker(this.fluster,this);if (this.fluster.debugEnabled) {google.maps.event.addListener(this.marker,\'mouseover\',me.debugShowMarkers);google.maps.event.addListener(this.marker,\'mouseout\',me.debugHideMarkers)}}this.marker.show()}};this.hide=function() {if (this.marker!=null) {this.marker.hide()}};this.debugShowMarkers=function() {for (var i=0;i&lt;me.markers.length;i++) {me.markers[i].setVisible(true)}};this.debugHideMarkers=function() {for (var i=0;i&lt;me.markers.length;i++) {me.markers[i].setVisible(false)}};this.getMarkerCount=function() {return this.markers.length};this.contains=function(_position) {return me.bounds.contains(_position)};this.getPosition=function() {return this.center};this.getBounds=function() {return this.bounds};this.getMarkerBounds=function() {var bounds=new google.maps.LatLngBounds(me.markers[0].getPosition(),me.markers[0].getPosition());for (var i=1;i&lt;me.markers.length;i++) {bounds.extend(me.markers[i].getPosition())}return bounds};this.addMarker(_marker)}&#10;function Fluster2ClusterMarker(_fluster,_cluster) {this.fluster=_fluster;this.cluster=_cluster;this.position=this.cluster.getPosition();this.markerCount=this.cluster.getMarkerCount();this.map=this.fluster.getMap();this.style=null;this.div=null;var styles=this.fluster.getStyles();for (var i in styles) {if (this.markerCount&gt;i) {this.style=styles[i]} else {break}}google.maps.OverlayView.call(this);this.setMap(this.map);this.draw()};Fluster2ClusterMarker.prototype=new google.maps.OverlayView();Fluster2ClusterMarker.prototype.draw=function() {if (this.div==null) {var me=this;this.div=document.createElement(\'div\');this.div.style.position=\'absolute\';this.div.style.width=this.style.width+\'px\';this.div.style.height=this.style.height+\'px\';this.div.style.lineHeight=this.style.height+\'px\';this.div.style.background=\'transparent url(&quot;\'+this.style.image+\'&quot;) 50% 50% no-repeat\';this.div.style.color=this.style.textColor;this.div.style.textAlign=\'center\';this.div.style.fontFamily=\'Arial, Helvetica\';this.div.style.fontSize=\'11px\';this.div.style.fontWeight=\'bold\';this.div.innerHTML=this.markerCount;this.div.style.cursor=\'pointer\';google.maps.event.addDomListener(this.div,\'click\',function() {me.map.fitBounds(me.cluster.getMarkerBounds())});this.getPanes().overlayLayer.appendChild(this.div)}var position=this.getProjection().fromLatLngToDivPixel(this.position);this.div.style.left=(position.x-parseInt(this.style.width/2))+\'px\';this.div.style.top=(position.y-parseInt(this.style.height/2))+\'px\'};Fluster2ClusterMarker.prototype.hide=function() {this.div.style.display=\'none\'};Fluster2ClusterMarker.prototype.show=function() {this.div.style.display=\'block\'};&#10;function Fluster2ProjectionOverlay(map) {google.maps.OverlayView.call(this);this.setMap(map);this.getP=function() {return this.getProjection()}}Fluster2ProjectionOverlay.prototype=new google.maps.OverlayView();Fluster2ProjectionOverlay.prototype.draw=function() {};&#10;\''" visibility="public" line="1495"/>
  <method name="distance" start="1523" end="1541" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Calculates Distance between two points array('lat'=&gt;x,'lng'=&gt;y) DB: 371.04 * ACOS( COS( PI()/2 - RADIANS(90 - Retailer.lat)) * ' .">OS( PI()/2 - RADIANS(90 - '. $data['Location']['lat'] .')) * ' .
OS( RADIANS(Retailer.lng) - RADIANS('. $data['Location']['lng'] .')) + ' .
IN( PI()/2 - RADIANS(90 - Retailer.lat)) * ' .
IN( PI()/2 - RADIANS(90 - '. $data['Location']['lat'] . '))) ' .
S distance'</description>
      <param type="array" variable="pointX"/>
      <param type="array" variable="pointY"/>
      <return description="distance: in km" type="int">DEPRECATED - use GeocodeLib::distance() instead!
2009-03-06 ms</return>
    </docblock>
    <parameter name="pointX" byreference="false" type="{unknown}"/>
    <parameter name="pointY" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="$res = &#9;6371.04 * ACOS( COS( PI()/2 - rad2deg(90 - $pointX['lat'])) *" line="1524"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="COS( PI()/2 - rad2deg(90 - $pointY['lat'])) *" line="1525"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="COS( rad2deg($pointX['lng']) - rad2deg($pointY['lng'])) +" line="1526"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="SIN( PI()/2 - rad2deg(90 - $pointX['lat'])) *" line="1527"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="SIN( PI()/2 - rad2deg(90 - $pointY['lat'])));" line="1528"/>
      <comment xmlns="http://xml.phpdox.net/src#" value="$res = 6371.04 * acos(sin($pointY['lat'])*sin($pointX['lat'])+cos($pointY['lat'])*cos($pointX['lat'])*cos($pointY['lng'] - $pointX['lng']));" line="1529"/>
      <comment value="seems to be the only working one (although slightly incorrect...)" line="1534"/>
      <comment value="Miles to KM" line="1537"/>
    </inline>
  </method>
  <method name="_arrayToObject" start="1543" end="1548" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="asString" byreference="false" type="{unknown}" default="true"/>
    <parameter name="keyAsString" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="_toObjectParams" start="1550" end="1558" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="asString" byreference="false" type="{unknown}" default="true"/>
    <parameter name="keyAsString" byreference="false" type="{unknown}" default="false"/>
  </method>
  <parent full="AppHelper" namepsace="" name="AppHelper">
    <extends full="Helper" namespace="" name="Helper"/>
  </parent>
<enrichments><enrichment type="build"><date unix="1397048043" date="09-04-2014" time="12:54:03" iso="2014-04-09T12:54:03+00:00" rfc="Wed, 09 Apr 2014 12:54:03 +0000"/><phpdox xmlns="http://xml.phpdox.net/src#" version="0.6.5" info="phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" generated="Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" phar="yes"><enricher type="build"/><enricher type="git"/><enricher type="checkstyle"/><enricher type="pmd"/><enricher type="phploc"/></phpdox><php xmlns="http://xml.phpdox.net/src#" version="5.3.10-1ubuntu3.11" os="Linux"><extension name="Core"/><extension name="date"/><extension name="ereg"/><extension name="libxml"/><extension name="openssl"/><extension name="pcre"/><extension name="zlib"/><extension name="bcmath"/><extension name="bz2"/><extension name="calendar"/><extension name="ctype"/><extension name="dba"/><extension name="dom"/><extension name="hash"/><extension name="fileinfo"/><extension name="filter"/><extension name="ftp"/><extension name="gettext"/><extension name="SPL"/><extension name="iconv"/><extension name="json"/><extension name="mbstring"/><extension name="pcntl"/><extension name="session"/><extension name="posix"/><extension name="readline"/><extension name="Reflection"/><extension name="standard"/><extension name="shmop"/><extension name="SimpleXML"/><extension name="soap"/><extension name="sockets"/><extension name="Phar"/><extension name="exif"/><extension name="sysvmsg"/><extension name="sysvsem"/><extension name="sysvshm"/><extension name="tokenizer"/><extension name="wddx"/><extension name="xml"/><extension name="xmlreader"/><extension name="xmlwriter"/><extension name="zip"/><extension name="PDO"/><extension name="xsl"/><extension name="mhash"/></php></enrichment><enrichment type="git"><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="f16525be325aa16218dfea4fe983ccf2a60b79b9"><author email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><commiter email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><message>wijzigingen na het aanmaken van een nieuw phpstrom project</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="287b8750eddef6446e689ccd35cee74b32cde2ed"><author email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><commiter email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><message>rechten zijn gewijzigd</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="58d361958cff9f7a6a85bed1ef717e1029d99d24"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:53:28+00:00" unixtime="1372262008"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:55:26+00:00" unixtime="1372262126"/><message>phpstorm connect?</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="ab510a8ba8b3726396604720ff22cc62d62cda63"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><message>hele hoop opgelost, ik had het eerder moeten committen :$</message></commit></enrichment></enrichments></class>
