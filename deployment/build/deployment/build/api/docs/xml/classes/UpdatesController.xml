<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="UpdatesController" namespace="" name="UpdatesController" abstract="false" final="false" start="2" end="352">
  <file path="app/Plugin/Update/Controller" file="UpdatesController.php" realpath="/home/vagrant/socsoc/app/Plugin/Update/Controller/UpdatesController.php" size="12764" time="2014-04-09T08:38:48+00:00" unixtime="1397032728" sha1="e6076f9a658ab9193e40079a43e37266627336e7"/>
  <extends full="AppController" namespace="" name="AppController"/>
  <member name="uses" type="array" visibility="public" line="5"/>
  <member name="name" type="string" default="'Update'" visibility="public" line="6"/>
  <method name="index" start="8" end="11" abstract="false" final="false" static="false" visibility="public"/>
  <method name="svndryrun" start="13" end="167" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="read in the configuration" line="15"/>
      <comment value="de repository die we willen gebruiken (standaard: readonlyrepos" line="16"/>
      <comment value="gebruikersnaam voor het benaderen van de repository" line="17"/>
      <comment value="wachtwoord voor de repository" line="18"/>
      <comment value="configuratie bestand van subversion zelf" line="19"/>
      <comment value="array met gebruikers welke deze plugin mogen gebruiken" line="20"/>
      <comment value="svn binary" line="21"/>
      <comment value="updaten vanuit tags, branches of trunk?" line="22"/>
      <comment value="de directory waar we het schemabestand op willen slaan" line="23"/>
      <comment value="naam van het schemabestand (standaard: schema.php)" line="24"/>
      <comment value="does svn exist on the system? And is it executable?" line="27"/>
      <comment value="working directory bepalen waaruit we de subversion info willen halen" line="37"/>
      <comment value="Get current SVN URL of this application" line="40"/>
      <comment value="Probeer lijst met tags te krijgen:" line="52"/>
      <comment value="verwijder de standaard tekst die $svn info geeft bij de repository url" line="53"/>
      <comment value="productie omgevingen werken alleen met de 'readonlyrepos' repository" line="54"/>
      <comment value="voeg '/tags/' toe omdat we alleen uit tags willen updaten" line="55"/>
      <comment value="voeg de standaard credentials toe aan de header" line="57"/>
      <comment value="haal de lijst met tags op door de tags directory webpagina uit te lezen (i.e. http://svn.mindef.nl/readonlyrepos/&lt;naam&gt;/tags)" line="66"/>
      <comment value="Lege array welke we gebruiken om de tags in op te slaan" line="69"/>
      <comment value="Kijken of we een lijstje met tags hebben:" line="72"/>
      <comment value="Als we iets hebben:" line="75"/>
      <comment value="Als we tags hebben, deze schonen" line="80"/>
      <comment value="Schonen" line="86"/>
      <comment value="Tags van nieuw naar oud sorteren" line="98"/>
      <comment value="Als formulier gesubmit is" line="104"/>
      <comment value="lees het bestand uit" line="111"/>
      <comment value="we willen niet dat plaintext wachtwoorden opgeslagen worden" line="114"/>
      <comment value="data setten voor validatie" line="122"/>
      <comment value="Verander de URL's in readonly repos's" line="128"/>
      <comment value="eerste maal commando aftrappen en SVN errors afvangen" line="132"/>
      <comment value="er is een error" line="136"/>
    </inline>
  </method>
  <method name="svnswitch" start="169" end="216" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="svn binary" line="171"/>
      <comment value="gebruikersnaam voor het benaderen van de repository" line="172"/>
      <comment value="wachtwoord voor de repository" line="173"/>
      <comment value="de directory waar we het schemabestand op willen slaan" line="174"/>
      <comment value="naam van het schemabestand" line="175"/>
      <todo value="hier moet nog een rechten check" line="177"/>
      <comment value="filesystem dir bepalen" line="179"/>
    </inline>
  </method>
  <method name="dbupdate" start="224" end="257" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <todo value="Controle op rechten inbouwen">Enter description here ...</todo>
    </docblock>
    <inline>
      <comment value="get the configuration information from the config file (app/Config/core.php)" line="225"/>
      <comment value="de directory waar we het schemabestand op willen slaan" line="226"/>
      <comment value="naam van het schemabestand" line="227"/>
      <comment value="create fullpath to schema file" line="229"/>
      <comment value="run the update command when the schema file exists" line="236"/>
      <comment value="do a dry run" line="238"/>
      <comment value="path where the schema file resides" line="239"/>
      <comment value="name of the schema file" line="240"/>
      <comment value="don't execute the sql, just show which queries are needed to do the update" line="241"/>
      <comment value="the path to the app directory of the application" line="242"/>
      <comment value="assemble and execute the command" line="244"/>
    </inline>
  </method>
  <method name="isDbUptodate" start="265" end="309" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Does a comparison between the available schema and the database and checks whether they differ"/>
      <return description="True when the database is uptodate, false otherwise" type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="output" byreference="true" type="array"/>
    <inline>
      <comment value="create fullpath to schema file" line="267"/>
      <comment value="get the configuration information from the config file (app/Config/core.php)" line="271"/>
      <comment value="de directory waar we het schemabestand op willen slaan" line="272"/>
      <comment value="naam van het schemabestand" line="273"/>
      <comment value="run the update command when the schema file exists" line="276"/>
      <comment value="do a dry run" line="278"/>
      <comment value="path where the schema file resides" line="279"/>
      <comment value="name of the schema file" line="280"/>
      <comment value="don't execute the sql, just show which queries are needed to do the update" line="281"/>
      <comment value="the path to the app directory of the application" line="282"/>
      <comment value="assemble and execute the command" line="284"/>
      <comment value="check the output to see if the schema is up-to-date (ie there are no changes)" line="288"/>
      <comment value="string which signifies that the database is uptodate" line="289"/>
      <comment value="string which signifies that the database is not up-to-date" line="290"/>
      <comment value="found the string that the database is up-to-date" line="294"/>
      <comment value="shouldn't be possible to get here, but just to be sure" line="307"/>
    </inline>
  </method>
  <method name="schemamaken" start="315" end="351" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a database schema of the database which is in use for this application Enter description here ..."/>
    </docblock>
    <inline>
      <comment value="de directory waar we het schemabestand op willen slaan" line="317"/>
      <comment value="naam van het schemabestand (standaard: schema.php)" line="318"/>
      <comment value="include the CakeSchema as Model" line="322"/>
      <comment value="instantiate the object" line="325"/>
      <comment value="set the location where to write the schema to" line="330"/>
      <comment value="check for writing permissions" line="334"/>
      <comment value="Klaar" line="348"/>
    </inline>
  </method>
  <parent full="AppController" namepsace="" name="AppController">
    <extends full="Controller" namespace="" name="Controller"/>
    <member name="components" type="array" visibility="public" line="36"/>
    <member name="uses" type="array" visibility="public" line="56">
      <docblock>
        <description compact=""/>
      </docblock>
    </member>
    <method name="getSearchFormInfo" start="58" end="85" abstract="false" final="false" static="false" visibility="public">
      <inline>
        <comment value="get the information to build the searchform" line="59"/>
      </inline>
    </method>
    <method name="beforeRender" start="91" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This function is called before every view is displayed"/>
      </docblock>
      <inline>
        <comment value="cookies need to be accepted" line="100"/>
        <comment value="get the information needed to setup the search form on every page" line="107"/>
        <comment value="let the views know whether the user is logged in or not" line="110"/>
        <comment value="check the supported browser versions if we did not do so" line="113"/>
        <comment value="get the number of online users" line="116"/>
        <comment value="get all the rubrics so we can create hidden selectelements which can be used" line="121"/>
        <comment value="for searching and adding" line="122"/>
      </inline>
    </method>
    <method name="isBrowserOutOfDate" start="169" end="177" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact=""/>
        <param type="array" variable="$browser"/>
        <return type="object">
          <type full="bool" namespace="" name="bool"/>
        </return>
      </docblock>
      <parameter name="browser" byreference="false" type="array"/>
      <inline>
        <comment value="we didn't recognize the browser" line="174"/>
      </inline>
    </method>
    <method name="beforeFilter" start="183" end="193" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This function is called before every action is run"/>
      </docblock>
      <inline>
        <comment value="update the last online value for the currently logged in user (if any)" line="186"/>
        <comment value="set the max upload limit" line="189"/>
      </inline>
    </method>
    <method name="isAuthorized" start="235" end="259" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set global authorization for the application">Per-action authorization is set in the overwritten function 'isAuthorized($user)'
in the controller of a requested action.
This global function sets authorization on all actions of all controllers for users
with the role 'beheerder'</description>
        <param description="Array holding $user['id']" type="array" variable="$user"/>
        <return description="True when the user has the role 'beheerder', otherwise false" type="boolean"/>
      </docblock>
      <parameter name="user" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="admin users are allowed to do everything" line="236"/>
        <comment value="admin functions are for admins only" line="241"/>
        <comment value="setup the allowed actions for loggedin users" line="247"/>
        <comment value="actions allowed for loggedin users only" line="252"/>
        <comment value="default deny access" line="257"/>
      </inline>
    </method>
    <method name="updateAuthUserInfo" start="266" end="288" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Update the information hold in the Auth component. Useful when the users' information changes (when editing user information, for example)."/>
      </docblock>
      <inline>
        <comment value="Read in the current user information out of the database" line="267"/>
        <comment value="remove the password field" line="272"/>
        <comment value="merge the auth component data with our freshly fetched info" line="277"/>
        <comment value="write the user information to the Auth component" line="283"/>
      </inline>
    </method>
    <method name="ago" start="296" end="365" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact=""/>
        <param description="The time we want to break down into human readable time" type="object" variable="$time">
          <type full="unknown" namespace="" name="unknown"/>
        </param>
        <param type="object" variable="$rcs">
          <type full="int|number" namespace="" name="int|number"/>
        </param>
        <return type="string"/>
      </docblock>
      <parameter name="time" byreference="false" type="{unknown}"/>
      <parameter name="rcs" byreference="false" type="integer" default="0"/>
      <inline>
        <comment value="periods of time we have (singular)" line="300"/>
        <comment value="periods of time we have (plural)" line="312"/>
        <comment value="the length of each period of time in seconds" line="324"/>
        <comment value="loop through the supplied time" line="337"/>
        <comment value="ugly hack to prevent $countLength from getting -1" line="344"/>
        <comment value="write down the singular form of past time" line="349"/>
        <comment value="when working with plurals, change the name of the period to its plural form" line="352"/>
      </inline>
    </method>
    <method name="daysBetween" start="372" end="376" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact=""/>
        <param variable="$fromTime"/>
        <return type="float"/>
      </docblock>
      <parameter name="fromTime" byreference="false" type="{unknown}"/>
    </method>
    <method name="getBrowser" start="381" end="485" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Browser check"/>
      </docblock>
      <inline>
        <comment value="First get the platform?" line="390"/>
        <comment value="Next get the name of the useragent yes seperately and for good reason" line="401"/>
        <comment value="finally get the correct version number" line="446"/>
        <comment value="see how many we have" line="454"/>
        <comment value="we will have two since we are not using 'other' argument yet" line="457"/>
        <comment value="see if version is before or after the name" line="458"/>
        <comment value="check if we have a number" line="470"/>
      </inline>
    </method>
  </parent>
<enrichments><enrichment type="build"><date unix="1397048043" date="09-04-2014" time="12:54:03" iso="2014-04-09T12:54:03+00:00" rfc="Wed, 09 Apr 2014 12:54:03 +0000"/><phpdox xmlns="http://xml.phpdox.net/src#" version="0.6.5" info="phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" generated="Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" phar="yes"><enricher type="build"/><enricher type="git"/><enricher type="checkstyle"/><enricher type="pmd"/><enricher type="phploc"/></phpdox><php xmlns="http://xml.phpdox.net/src#" version="5.3.10-1ubuntu3.11" os="Linux"><extension name="Core"/><extension name="date"/><extension name="ereg"/><extension name="libxml"/><extension name="openssl"/><extension name="pcre"/><extension name="zlib"/><extension name="bcmath"/><extension name="bz2"/><extension name="calendar"/><extension name="ctype"/><extension name="dba"/><extension name="dom"/><extension name="hash"/><extension name="fileinfo"/><extension name="filter"/><extension name="ftp"/><extension name="gettext"/><extension name="SPL"/><extension name="iconv"/><extension name="json"/><extension name="mbstring"/><extension name="pcntl"/><extension name="session"/><extension name="posix"/><extension name="readline"/><extension name="Reflection"/><extension name="standard"/><extension name="shmop"/><extension name="SimpleXML"/><extension name="soap"/><extension name="sockets"/><extension name="Phar"/><extension name="exif"/><extension name="sysvmsg"/><extension name="sysvsem"/><extension name="sysvshm"/><extension name="tokenizer"/><extension name="wddx"/><extension name="xml"/><extension name="xmlreader"/><extension name="xmlwriter"/><extension name="zip"/><extension name="PDO"/><extension name="xsl"/><extension name="mhash"/></php></enrichment><enrichment type="git"><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="f16525be325aa16218dfea4fe983ccf2a60b79b9"><author email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><commiter email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><message>wijzigingen na het aanmaken van een nieuw phpstrom project</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="287b8750eddef6446e689ccd35cee74b32cde2ed"><author email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><commiter email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><message>rechten zijn gewijzigd</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="58d361958cff9f7a6a85bed1ef717e1029d99d24"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:53:28+00:00" unixtime="1372262008"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:55:26+00:00" unixtime="1372262126"/><message>phpstorm connect?</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="ab510a8ba8b3726396604720ff22cc62d62cda63"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><message>hele hoop opgelost, ik had het eerder moeten committen :$</message></commit></enrichment></enrichments></class>
