<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="TreeHelper" namespace="" name="TreeHelper" abstract="false" final="false" start="33" end="453">
  <file path="app/Plugin/Tools/View/Helper" file="TreeHelper.php" realpath="/home/vagrant/socsoc/app/Plugin/Tools/View/Helper/TreeHelper.php" size="13303" time="2014-04-09T08:38:48+00:00" unixtime="1397032728" sha1="67a58d6b4fcbb1ad4c4b44c997c1f797d5e80c0c"/>
  <docblock>
    <description compact="Tree helper">Helper to generate tree representations of MPTT or recursively nested data</description>
  </docblock>
  <extends full="AppHelper" namespace="" name="AppHelper"/>
  <member name="_settings" type="array" visibility="public" line="41">
    <docblock>
      <description compact="settings property"/>
      <var type="array"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="_typeAttributes" type="array" visibility="public" line="48">
    <docblock>
      <description compact="typeAttributes property"/>
      <var type="array"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="_typeAttributesNext" type="array" visibility="public" line="55">
    <docblock>
      <description compact="typeAttributesNext property"/>
      <var type="array"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="_itemAttributes" type="array" visibility="public" line="62">
    <docblock>
      <description compact="itemAttributes property"/>
      <var type="array"/>
      <access value="private"/>
    </docblock>
  </member>
  <member name="helpers" type="array" visibility="public" line="69">
    <docblock>
      <description compact="helpers variable"/>
      <var type="array"/>
      <access value="public"/>
    </docblock>
  </member>
  <method name="generate" start="103" end="294" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Tree generation method.">Accepts the results of
	find('all', array('fields' =&gt; array('lft', 'rght', 'whatever'), 'order' =&gt; 'lft ASC'));
	children(); // if you have the tree behavior of course!
or 	findAllThreaded(); and generates a tree structure of the data.

Settings (2nd parameter):
'model' =&gt; name of the model (key) to look for in the data array. defaults to the first model for the current
controller. If set to false 2d arrays will be allowed/expected.
'alias' =&gt; the array key to output for a simple ul (not used if element or callback is specified)
'type' =&gt; type of output defaults to ul
'itemType =&gt; type of item output default to li
'id' =&gt; id for top level 'type'
'class' =&gt; class for top level 'type'
'element' =&gt; path to an element to render to get node contents.
'callback' =&gt; callback to use to get node contents. e.g. array(&amp;$anObject, 'methodName') or 'floatingMethod'
'autoPath' =&gt; array($left, $right [$classToAdd = 'active']) if set any item in the path will have the class $classToAdd added. MPTT only.
'left' =&gt; name of the 'lft' field if not lft. only applies to MPTT data
'right' =&gt; name of the 'rght' field if not lft. only applies to MPTT data
'depth' =&gt; used internally when running recursively, can be used to override the depth in either mode.
'firstChild' =&gt; used internally when running recursively.
'splitDepth' =&gt; if multiple "parallel" types are required, instead of one big type, nominate the depth to do so here
	example: useful if you have 30 items to display, and you'd prefer they appeared in the source as 3 lists of 10 to be able to
	style/float them.
'splitCount' =&gt; the number of "parallel" types. defaults to 3</description>
      <param description="data to loop on" type="array" variable="$data"/>
      <param type="array" variable="$settings"/>
      <return description="html representation of the passed data" type="string"/>
      <access value="public"/>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
    <parameter name="settings" byreference="false" type="array"/>
    <inline>
      <comment value="Allow 2d data arrays" line="150"/>
      <comment value="BulletProof" line="155"/>
      <comment value="Close open items as appropriate" line="159"/>
      <comment value="Some useful vars" line="173"/>
      <comment value="Main Content" line="216"/>
      <comment value="Prefix" line="231"/>
      <comment value="Suffix" line="249"/>
      <comment value="Cleanup" line="270"/>
    </inline>
  </method>
  <method name="addItemAttribute" start="308" end="314" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="addItemAttribute function">Called to modify the attributes of the next &lt;item&gt; to be processed
Note that the content of a 'node' is processed before generating its wrapping &lt;item&gt; tag</description>
      <param type="string" variable="$id"/>
      <param type="string" variable="$key"/>
      <param type="mixed" variable="$value"/>
      <access value="public"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="string" default="''"/>
    <parameter name="key" byreference="false" type="string" default="''"/>
    <parameter name="value" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="addTypeAttribute" start="344" end="355" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="addTypeAttribute function">Called to modify the attributes of the next &lt;type&gt; to be processed
Note that the content of a 'node' is processed before generating its wrapping &lt;type&gt; tag (if appropriate)
An 'interesting' case is that of a first child with children. To generate the output
&lt;ul&gt; (1)
     &lt;li&gt;XYZ (3)
             &lt;ul&gt; (2)
                     &lt;li&gt;ABC...
                     ...
             &lt;/ul&gt;
             ...
The processing order is indicated by the numbers in brackets.
attributes are allways applied to the next type (2) to be generated
to set properties of the holding type - pass 'previous' for the 4th param
i.e.
// Hide children (2)
$this-&gt;Tree-&gt;addTypeAttribute('style', 'display', 'hidden');
// give top level type (1) a class
$this-&gt;Tree-&gt;addTypeAttribute('class', 'hasHiddenGrandChildren', null, 'previous');</description>
      <param type="string" variable="$id"/>
      <param type="string" variable="$key"/>
      <param type="mixed" variable="$value"/>
      <access value="public"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="string" default="''"/>
    <parameter name="key" byreference="false" type="string" default="''"/>
    <parameter name="value" byreference="false" type="{unknown}" default="null"/>
    <parameter name="previousOrNext" byreference="false" type="string" default="'next'"/>
  </method>
  <method name="supressChildren" start="363" end="364" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="supressChildren method"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
      <access value="public"/>
    </docblock>
  </method>
  <method name="_suffix" start="374" end="398" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="suffix method">Used to close and reopen a ul/ol to allow easier listings</description>
      <access value="private"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="_attributes" start="410" end="451" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="attributes function">Logic to apply styles to tags.</description>
      <param type="mixed" variable="$rType"/>
      <param type="array" variable="$elementData"/>
      <access value="private"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="rType" byreference="false" type="{unknown}"/>
    <parameter name="elementData" byreference="false" type="array"/>
    <parameter name="clear" byreference="false" type="{unknown}" default="true"/>
  </method>
  <parent full="AppHelper" namepsace="" name="AppHelper">
    <extends full="Helper" namespace="" name="Helper"/>
  </parent>
<enrichments><enrichment type="build"><date unix="1397048043" date="09-04-2014" time="12:54:03" iso="2014-04-09T12:54:03+00:00" rfc="Wed, 09 Apr 2014 12:54:03 +0000"/><phpdox xmlns="http://xml.phpdox.net/src#" version="0.6.5" info="phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" generated="Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" phar="yes"><enricher type="build"/><enricher type="git"/><enricher type="checkstyle"/><enricher type="pmd"/><enricher type="phploc"/></phpdox><php xmlns="http://xml.phpdox.net/src#" version="5.3.10-1ubuntu3.11" os="Linux"><extension name="Core"/><extension name="date"/><extension name="ereg"/><extension name="libxml"/><extension name="openssl"/><extension name="pcre"/><extension name="zlib"/><extension name="bcmath"/><extension name="bz2"/><extension name="calendar"/><extension name="ctype"/><extension name="dba"/><extension name="dom"/><extension name="hash"/><extension name="fileinfo"/><extension name="filter"/><extension name="ftp"/><extension name="gettext"/><extension name="SPL"/><extension name="iconv"/><extension name="json"/><extension name="mbstring"/><extension name="pcntl"/><extension name="session"/><extension name="posix"/><extension name="readline"/><extension name="Reflection"/><extension name="standard"/><extension name="shmop"/><extension name="SimpleXML"/><extension name="soap"/><extension name="sockets"/><extension name="Phar"/><extension name="exif"/><extension name="sysvmsg"/><extension name="sysvsem"/><extension name="sysvshm"/><extension name="tokenizer"/><extension name="wddx"/><extension name="xml"/><extension name="xmlreader"/><extension name="xmlwriter"/><extension name="zip"/><extension name="PDO"/><extension name="xsl"/><extension name="mhash"/></php></enrichment><enrichment type="git"><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="f16525be325aa16218dfea4fe983ccf2a60b79b9"><author email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><commiter email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><message>wijzigingen na het aanmaken van een nieuw phpstrom project</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="287b8750eddef6446e689ccd35cee74b32cde2ed"><author email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><commiter email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><message>rechten zijn gewijzigd</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="58d361958cff9f7a6a85bed1ef717e1029d99d24"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:53:28+00:00" unixtime="1372262008"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:55:26+00:00" unixtime="1372262126"/><message>phpstorm connect?</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="ab510a8ba8b3726396604720ff22cc62d62cda63"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><message>hele hoop opgelost, ik had het eerder moeten committen :$</message></commit></enrichment></enrichments></class>
