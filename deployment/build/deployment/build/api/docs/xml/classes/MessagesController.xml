<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="MessagesController" namespace="" name="MessagesController" abstract="false" final="false" start="15" end="685">
  <file path="app/Controller" file="MessagesController.php" realpath="/home/vagrant/socsoc/app/Controller/MessagesController.php" size="24118" time="2014-04-09T08:38:48+00:00" unixtime="1397032728" sha1="9b068705b102a079bea71034f705adaef8940ec7"/>
  <docblock>
    <description compact="Messages Controller"/>
    <property value="Message $Message"/>
  </docblock>
  <extends full="AppController" namespace="" name="AppController"/>
  <member name="recipient_id" type="integer" default="0" visibility="public" line="21">
    <docblock>
      <description compact="The unique id of the recipient who will recieve this message"/>
      <var description="The unique id of the recipient who will recieve this message" type="int"/>
    </docblock>
  </member>
  <member name="post_id" type="integer" default="0" visibility="public" line="29">
    <docblock>
      <description compact="When the message is sent in relation to a post, this value will hold the unique id of the post"/>
      <var description="$post_id" type="int"/>
    </docblock>
  </member>
  <member name="uses" type="array" visibility="public" line="31"/>
  <method name="index" start="38" end="41" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="index method"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="beforeFilter" start="43" end="52" abstract="false" final="false" static="false" visibility="public">
    <inline>
      <comment value="set a different message when an anonymous user wants to react to a received message" line="46"/>
    </inline>
  </method>
  <method name="view" start="61" end="67" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="view method"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="add" start="74" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="add method"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="edit" start="98" end="118" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="edit method"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="delete" start="128" end="142" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="delete method"/>
      <throws type="object">
        <type full="MethodNotAllowedException" namespace="" name="MethodNotAllowedException"/>
      </throws>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="admin_index" start="149" end="152" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="admin_index method"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="admin_view" start="161" end="167" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="admin_view method"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="admin_add" start="174" end="189" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="admin_add method"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="admin_edit" start="198" end="218" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="admin_edit method"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="admin_delete" start="228" end="242" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="admin_delete method"/>
      <throws type="object">
        <type full="MethodNotAllowedException" namespace="" name="MethodNotAllowedException"/>
      </throws>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <param type="string" variable="$id"/>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}" default="null"/>
  </method>
  <method name="sendto" start="251" end="320" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Send a message from one user to another"/>
      <param description="Array holding the userrecord for the recipient" type="array" variable="$recipient"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="recipient" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="get the userrecord for this recipient" line="252"/>
      <comment value="when the form is posted" line="260"/>
      <comment value="$email = new CakeEmail();" line="262"/>
      <comment value="set the sender and recipient id" line="264"/>
      <comment value="set the token to react" line="268"/>
      <comment value="first, save the message in the database" line="280"/>
      <comment value="now retrieve the message record together with its linked records" line="284"/>
      <comment value="add the mandatory subject text to the subject" line="287"/>
      <comment value="add the response footer to the message" line="291"/>
      <comment value="now, send the email" line="294"/>
      <comment value="sent a copy to the sender" line="300"/>
      <comment value="create a success message" line="306"/>
      <comment value="send the user to the recipients' detailpage" line="309"/>
      <comment value="Set the title for the page" line="318"/>
    </inline>
  </method>
  <method name="sendreaction" start="331" end="388" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Send a reaction to a post">This function is used in every detail (view) page of a post in the reaction
form</description>
      <param type="string" variable="$post_id"/>
      <return type="boolean"/>
    </docblock>
    <parameter name="post_id" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="Get the post and the related models" line="332"/>
      <comment value="when the form is posted" line="336"/>
      <comment value="now retrieve the message record together with its linked records" line="356"/>
      <comment value="add the senders' name to the message" line="359"/>
      <comment value="reaction has been saved, now send the e-mail to both the recipient and the sender" line="362"/>
      <comment value="sent a copy to the sender" line="369"/>
      <comment value="everything went ok" line="375"/>
      <comment value="could not save the reaction in the system" line="380"/>
      <comment value="user has not edited nothing yet" line="386"/>
    </inline>
  </method>
  <method name="_addMessageFooter" start="400" end="403" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="This function appends a mandatory text to the body of a message.">The text that is appended is configuration directive Mail.messageFooter. In this
configuration directive, the user is able to use variables. This function replaces this variables
with the actual values.</description>
      <see value="config/user_config.php"/>
      <see value="_replaceVariables() for which variables are allowed to use"/>
      <return description="The text that is to be added to the subject" type="string"/>
    </docblock>
    <inline>
      <comment value="get the footer text out of the configuration and replace the variables" line="401"/>
    </inline>
  </method>
  <method name="_addMessageSubject" start="415" end="418" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="This function prepends a mandatory text to the subject of a message.">The text that is prepended is configuration directive Mail.messageSubject. In this
configuration directive, the user is able to use variables. This function replaces this variables
with the actual values.</description>
      <see value="config/user_config.php"/>
      <see value="_replaceVariables() for which variables are allowed to use"/>
      <return description="The text that is to be added to the subject" type="string"/>
    </docblock>
    <inline>
      <comment value="get the footer text out of the configuration and replace the variables" line="416"/>
    </inline>
  </method>
  <method name="_replaceVariables" start="445" end="518" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Replace variables in a piece of text with their respective values">Allowed variables:

- '%sender.username%'        - the senders' username
- '%sender.city%                - the senders' city
- '%sender.last_online%        - the datetime when the sender was last online
- '%sender.email%            - the senders' email address
- '%sender.zipcode%            - the senders' zipcode
- '%sender.housenr%            - the senders' housenr
- '%recipient.username%        - the recipients' username
- '%recipient.city%            - the recipients' city
- '%recipient.last_online%    - the datetime when the recipient was last online
- '%recipient.email%            - the recipients' email address
- '%recipient.zipcode%        - the recipients' zipcode
- '%recipient.housenr%        - the recipients' housenumber
- '%reactionlink%'            - the full URL to the page where a reaction to this message can be created</description>
      <param description="The textmessage containing the variables that need to be replaced" type="string" variable="$message"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <internal>param int $recipient_id The unique id of the recipient the message is going to be send to</internal>
      <internal>param int $post_id The unique id of the post if the message is in relation to a post</internal>
      <return description="The message with the variables replaced    by their respective values" type="string"/>
    </docblock>
    <parameter name="message" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="get the recipient information out of the database" line="446"/>
      <comment value="set up the array containing the variables that can be used in the text message" line="453"/>
      <comment value="set up the array containing the values for the above mentioned variabes" line="471"/>
      <comment value="BEWARE: the order should be _exactly_ the same as the $search array!" line="472"/>
      <comment value="add message information when $message_id was supplied" line="489"/>
      <comment value="the full url to create a reaction to the send message" line="493"/>
      <comment value="if a post_id was supplied, append post information to the $search and $replace arrays" line="498"/>
      <comment value="get the recipient information out of the database" line="500"/>
      <comment value="return the substituted text message" line="516"/>
    </inline>
  </method>
  <method name="isAuthorized" start="527" end="545" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set authorization for actions concerning the user with the role 'beheerder'"/>
      <param description="Array holding $user['id']" type="array" variable="$user"/>
      <return description="True when the user has the role 'beheerder', otherwise false" type="boolean"/>
    </docblock>
    <parameter name="user" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="setup the allowed actions for loggedin users" line="530"/>
      <comment value="actions allowed for loggedin users only" line="538"/>
      <comment value="execute parent functin" line="543"/>
    </inline>
  </method>
  <method name="getHistoryFromMessages" start="551" end="566" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <param variable="$message_id"/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
    <parameter name="message_id" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="format the found message" line="556"/>
      <comment value="Do the same thing for the parentmessage, when there is one" line="559"/>
      <comment value="everthing went fine" line="564"/>
    </inline>
  </method>
  <method name="formatMessageForHistory" start="572" end="588" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact=""/>
      <param type="array" variable="$message"/>
      <return type="object">
        <type full="bool|string" namespace="" name="bool|string"/>
      </return>
    </docblock>
    <parameter name="message" byreference="false" type="array"/>
    <inline>
      <comment value="get the message including the childs" line="574"/>
      <comment value="assemble the message with the metadata" line="579"/>
    </inline>
  </method>
  <method name="replyto" start="598" end="682" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="This function is used to create and send a reply to a received message"/>
      <param variable="$token" type="string"/>
      <throws type="object">
        <type full="NotFoundException" namespace="" name="NotFoundException"/>
      </throws>
      <return type="object">
        <type full="bool|void" namespace="" name="bool|void"/>
      </return>
    </docblock>
    <parameter name="token" byreference="false" type="string" default="''"/>
    <inline>
      <comment value="Set the title for the page" line="599"/>
      <comment value="get the reaction which belongs to the supplied token" line="604"/>
      <comment value="get the history (all the old messages)" line="610"/>
      <comment value="user must be the receiver of the reaction, or an admin" line="615"/>
      <comment value="assemble the reaction record we want to save into the system" line="631"/>
      <comment value="now retrieve the message record together with its linked records" line="644"/>
      <comment value="add the conversation-history to the message" line="649"/>
      <comment value="set the options" line="653"/>
      <comment value="reaction has been saved, now send the e-mail to both the recipient and the sender" line="656"/>
      <comment value="sent a copy to the sender" line="665"/>
      <comment value="everything went ok" line="671"/>
      <comment value="could not save the reaction in the system" line="676"/>
    </inline>
  </method>
  <parent full="AppController" namepsace="" name="AppController">
    <extends full="Controller" namespace="" name="Controller"/>
    <member name="components" type="array" visibility="public" line="36"/>
    <member name="uses" type="array" visibility="public" line="56">
      <docblock>
        <description compact=""/>
      </docblock>
    </member>
    <method name="getSearchFormInfo" start="58" end="85" abstract="false" final="false" static="false" visibility="public">
      <inline>
        <comment value="get the information to build the searchform" line="59"/>
      </inline>
    </method>
    <method name="beforeRender" start="91" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This function is called before every view is displayed"/>
      </docblock>
      <inline>
        <comment value="cookies need to be accepted" line="100"/>
        <comment value="get the information needed to setup the search form on every page" line="107"/>
        <comment value="let the views know whether the user is logged in or not" line="110"/>
        <comment value="check the supported browser versions if we did not do so" line="113"/>
        <comment value="get the number of online users" line="116"/>
        <comment value="get all the rubrics so we can create hidden selectelements which can be used" line="121"/>
        <comment value="for searching and adding" line="122"/>
      </inline>
    </method>
    <method name="isBrowserOutOfDate" start="169" end="177" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact=""/>
        <param type="array" variable="$browser"/>
        <return type="object">
          <type full="bool" namespace="" name="bool"/>
        </return>
      </docblock>
      <parameter name="browser" byreference="false" type="array"/>
      <inline>
        <comment value="we didn't recognize the browser" line="174"/>
      </inline>
    </method>
    <method name="beforeFilter" start="183" end="193" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This function is called before every action is run"/>
      </docblock>
      <inline>
        <comment value="update the last online value for the currently logged in user (if any)" line="186"/>
        <comment value="set the max upload limit" line="189"/>
      </inline>
    </method>
    <method name="isAuthorized" start="235" end="259" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set global authorization for the application">Per-action authorization is set in the overwritten function 'isAuthorized($user)'
in the controller of a requested action.
This global function sets authorization on all actions of all controllers for users
with the role 'beheerder'</description>
        <param description="Array holding $user['id']" type="array" variable="$user"/>
        <return description="True when the user has the role 'beheerder', otherwise false" type="boolean"/>
      </docblock>
      <parameter name="user" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="admin users are allowed to do everything" line="236"/>
        <comment value="admin functions are for admins only" line="241"/>
        <comment value="setup the allowed actions for loggedin users" line="247"/>
        <comment value="actions allowed for loggedin users only" line="252"/>
        <comment value="default deny access" line="257"/>
      </inline>
    </method>
    <method name="updateAuthUserInfo" start="266" end="288" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Update the information hold in the Auth component. Useful when the users' information changes (when editing user information, for example)."/>
      </docblock>
      <inline>
        <comment value="Read in the current user information out of the database" line="267"/>
        <comment value="remove the password field" line="272"/>
        <comment value="merge the auth component data with our freshly fetched info" line="277"/>
        <comment value="write the user information to the Auth component" line="283"/>
      </inline>
    </method>
    <method name="ago" start="296" end="365" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact=""/>
        <param description="The time we want to break down into human readable time" type="object" variable="$time">
          <type full="unknown" namespace="" name="unknown"/>
        </param>
        <param type="object" variable="$rcs">
          <type full="int|number" namespace="" name="int|number"/>
        </param>
        <return type="string"/>
      </docblock>
      <parameter name="time" byreference="false" type="{unknown}"/>
      <parameter name="rcs" byreference="false" type="integer" default="0"/>
      <inline>
        <comment value="periods of time we have (singular)" line="300"/>
        <comment value="periods of time we have (plural)" line="312"/>
        <comment value="the length of each period of time in seconds" line="324"/>
        <comment value="loop through the supplied time" line="337"/>
        <comment value="ugly hack to prevent $countLength from getting -1" line="344"/>
        <comment value="write down the singular form of past time" line="349"/>
        <comment value="when working with plurals, change the name of the period to its plural form" line="352"/>
      </inline>
    </method>
    <method name="daysBetween" start="372" end="376" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact=""/>
        <param variable="$fromTime"/>
        <return type="float"/>
      </docblock>
      <parameter name="fromTime" byreference="false" type="{unknown}"/>
    </method>
    <method name="getBrowser" start="381" end="485" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Browser check"/>
      </docblock>
      <inline>
        <comment value="First get the platform?" line="390"/>
        <comment value="Next get the name of the useragent yes seperately and for good reason" line="401"/>
        <comment value="finally get the correct version number" line="446"/>
        <comment value="see how many we have" line="454"/>
        <comment value="we will have two since we are not using 'other' argument yet" line="457"/>
        <comment value="see if version is before or after the name" line="458"/>
        <comment value="check if we have a number" line="470"/>
      </inline>
    </method>
  </parent>
<enrichments><enrichment type="build"><date unix="1397048043" date="09-04-2014" time="12:54:03" iso="2014-04-09T12:54:03+00:00" rfc="Wed, 09 Apr 2014 12:54:03 +0000"/><phpdox xmlns="http://xml.phpdox.net/src#" version="0.6.5" info="phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" generated="Generated using phpDox 0.6.5 - Copyright (C) 2010 - 2014 by Arne Blankerts" phar="yes"><enricher type="build"/><enricher type="git"/><enricher type="checkstyle"/><enricher type="pmd"/><enricher type="phploc"/></phpdox><php xmlns="http://xml.phpdox.net/src#" version="5.3.10-1ubuntu3.11" os="Linux"><extension name="Core"/><extension name="date"/><extension name="ereg"/><extension name="libxml"/><extension name="openssl"/><extension name="pcre"/><extension name="zlib"/><extension name="bcmath"/><extension name="bz2"/><extension name="calendar"/><extension name="ctype"/><extension name="dba"/><extension name="dom"/><extension name="hash"/><extension name="fileinfo"/><extension name="filter"/><extension name="ftp"/><extension name="gettext"/><extension name="SPL"/><extension name="iconv"/><extension name="json"/><extension name="mbstring"/><extension name="pcntl"/><extension name="session"/><extension name="posix"/><extension name="readline"/><extension name="Reflection"/><extension name="standard"/><extension name="shmop"/><extension name="SimpleXML"/><extension name="soap"/><extension name="sockets"/><extension name="Phar"/><extension name="exif"/><extension name="sysvmsg"/><extension name="sysvsem"/><extension name="sysvshm"/><extension name="tokenizer"/><extension name="wddx"/><extension name="xml"/><extension name="xmlreader"/><extension name="xmlwriter"/><extension name="zip"/><extension name="PDO"/><extension name="xsl"/><extension name="mhash"/></php></enrichment><enrichment type="git"><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="f16525be325aa16218dfea4fe983ccf2a60b79b9"><author email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><commiter email="pauledenburg@gmail.com" name="Paul Edenburg" time="2013-10-06T19:40:29+00:00" unixtime="1381088429"/><message>wijzigingen na het aanmaken van een nieuw phpstrom project</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="c655de5c6ec34517511e6f908a2f638ad91a9d78"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-08-08T06:57:01+00:00" unixtime="1375945021"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-08-08T06:57:01+00:00" unixtime="1375945021"/><message>permissions goed gezet mbv fabric</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="e07ed27f5fc69e25d5e4976f2d4581adee6c7b04"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-07-30T04:13:13+00:00" unixtime="1375157593"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-07-30T04:13:13+00:00" unixtime="1375157593"/><message>execute bits verwijderd</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="287b8750eddef6446e689ccd35cee74b32cde2ed"><author email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><commiter email="paul@lamp2.(none)" name="Paul Edenburg" time="2013-07-29T20:18:45+00:00" unixtime="1375129125"/><message>rechten zijn gewijzigd</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="58d361958cff9f7a6a85bed1ef717e1029d99d24"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:53:28+00:00" unixtime="1372262008"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-26T15:55:26+00:00" unixtime="1372262126"/><message>phpstorm connect?</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="cf9563ad54e0e11bcbef81076ad68746930570ce"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-23T15:50:00+00:00" unixtime="1372002600"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-23T15:50:00+00:00" unixtime="1372002600"/><message>php mess detector: bevindingen verwerkt</message></commit><commit xmlns="http://xml.phpdox.net/gitlog#" sha1="ab510a8ba8b3726396604720ff22cc62d62cda63"><author email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><commiter email="paul@i2s.nl" name="Paul Edenburg" time="2013-06-14T14:30:14+00:00" unixtime="1371220214"/><message>hele hoop opgelost, ik had het eerder moeten committen :$</message></commit></enrichment></enrichments></class>
